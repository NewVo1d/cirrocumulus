{"version":3,"sources":["CustomError.js","PlotUtil.js","actions/index.js","DeleteDatasetDialog.js","ColorSchemeLegend.js","SizeLegend.js","DotPlot.js","EditDatasetDialog.js","CategoricalLegend.js","ColorSchemeLegendWrapper.js","EmbeddingChartPlotly.js","Autocomplete.js","ColorSchemeSelector.js","EmbedForm.js","reducers/index.js","App.js","index.js"],"names":["CustomError","params","Error","interpolators","intFormat","format","percentFormat","getLegendSizeHelper","selectedCountMap","scale","sizeScale","index","text","width","d","valueCounts","values","percent","counts","getLegendSizeScale","sizeDomain","Number","MAX_VALUE","forEach","value","i","sizeValue","Math","min","max","scaleLinear","domain","range","getInterpolator","name","startsWith","scaleChromatic","PlotUtil","showLink","responsive","displaylogo","modeBarButtonsToRemove","node","requestAnimationFrame","scatterpts","querySelectorAll","pt","setAttribute","style","opacity","options","embedding","showbackground","autorange","showgrid","zeroline","showline","autotick","ticks","showticklabels","title","legendWidth","legend","size","floor","window","screen","availWidth","availHeight","layout","hovermode","dragmode","font","height","margin","l","b","r","t","autoexpand","yanchor","autosize","showlegend","is3d","scene","xaxis","createAxis","yaxis","zaxis","API","authScopes","SET_UNSELECTED_MARKER_SIZE","SET_UNSELECTED_MARKER_SIZE_UI","SET_SERVER_INFO","SET_LEGEND_VISIBILITY","ADD_DATASET","DELETE_DATASET","UPDATE_DATASET","SET_MARKER_SIZE","SET_MARKER_OPACITY","SET_UNSELECTED_MARKER_OPACITY","SET_SELECTED_VALUE_COUNTS","SET_FEATURES","SET_GROUP_BY","SET_SELECTED_EMBEDDING","SET_NUMBER_OF_BINS","SET_BIN_VALUES","SET_BIN_SUMMARY","SET_MESSAGE","SET_INTERPOLATOR","SET_EMAIL","SET_USER","SET_DATASET","SET_DIALOG","EDIT_DATASET_DIALOG","IMPORT_DATASET_DIALOG","DELETE_DATASET_DIALOG","SET_DATASET_CHOICES","RESTORE_VIEW","SET_DOT_PLOT_DATA","SET_EMBEDDING_DATA","SET_LOADING","SET_LOADING_APP","SET_NUMBER_OF_BINS_UI","SET_MARKER_SIZE_UI","SET_MARKER_OPACITY_UI","SET_UNSELECTED_MARKER_OPACITY_UI","CATEGORY_20B","CATEGORY_20C","getUser","dispatch","state","fetch","headers","getIdToken","then","result","json","user","type","payload","logout","getState","gapi","auth2","getAuthInstance","signOut","_setDataset","selectedValueCountsPromise","selectedpoints","legendVisibility","p","datasetId","dataset","id","continuousFeatures","features","categoricalFeatures","groupBy","embeddings","keys","concat","binValues","nbins","numberOfBins","length","Object","c","body","JSON","stringify","method","selectedValueCounts","handleLegendClick","indexOf","splice","push","console","log","setLegendVisibility","handleSelectedPoints","points","data","_loadSavedView","q","location","search","substring","savedView","parse","decodeURIComponent","err","setMessage","colorScheme","interp","setDataset","_updateEmbedding","dotPlot","clear","catch","initLogin","loadSavedView","isSignedIn","get","email","currentUser","getBasicProfile","getEmail","_setEmail","listDatasets","getAuthResponse","id_token","saveDataset","readers","url","isEdit","_setLoading","serverEmail","serverInfo","updatePermissions","Promise","resolve","ok","permissionsResponse","importDatasetResponse","importDatasetResult","updateDataset","owner","_addDataset","finally","setDialog","handleError","deleteDataset","_deleteDataset","_setLoadingApp","setFeatures","obsCat","priorFeatures","priorGroupBy","val","prior","_setFeatures","legendVisibilityChanged","key","_setGroupBy","setSelectedEmbedding","datasetChoices","choice","obs","join","response","newDataset","version","var","obs_cat","nObs","n_obs","names","map","e","priority","sort","a","onError","selectedEmbeddings","embeddingData","cachedFeatureNames","currentFeatures","requestedFeatures","markerSize","markerOpacity","unselectedMarkerSize","unselectedMarkerOpacity","trace","active","date","Date","createPlotLayout","endsWith","embeddingUrl","dotPlotUrl","ngenes","feature","binSummary","selectedEmbedding","interpolator","promises","dotPlotPromise","stats","dotplot","valueCountsPromise","embeddingPromise","rgbScale","embeddingResult","embeddingValues","categories","coordinates","Float32Array","x","y","z","isCategorical","colorScale","traceUniqueValues","scaleOrdinal","schemeCategory10","n","scaleSequential","colors","rgb","color","g","chartData","hoverinfo","mode","hoveron","marker","showscale","unselected","indices","continuous","toLowerCase","slice","all","message","status","choices","DeleteDatasetDialog","props","handleClose","handleCancel","handleDelete","setState","loading","open","Dialog","this","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","Button","disabled","onClick","React","PureComponent","connect","ColorSchemeLegend","handleStart","handleDrag","handleStop","ref","createRef","backingScale","context","current","getContext","clearRect","nsteps","stepSize","gradient","createLinearGradient","valueToFraction","clamp","f","isNaN","addColorStop","fillStyle","fillRect","strokeStyle","strokeRect","label","numberFormat","textBaseline","textAlign","fillText","legendHeight","setTransform","redraw","prevProps","prevState","snapshot","devicePixelRatio","display","assign","SizeLegend","valueToX","valueToRadius","pix","radius","beginPath","arc","PI","stroke","Plot","createPlotlyComponent","Plotly","DotPlot","colorMin","colorMax","sizeMin","sizeMax","featureNameToValues","featureValues","undefined","fraction","summary","j","traces","sizemode","symbol","config","createPlotConfig","overflow","border","dotPlotData","EditDatasetDialog","handleSave","datasetName","trim","tokens","split","uniqueReaders","Set","reader","add","Array","from","onEmailChanged","event","target","onUrlChanged","onDatasetNameChanged","datasetInfo","roles","CircularProgress","TextField","required","onChange","helperText","multiline","dialog","CategoricalLegend","handleClick","preventDefault","legendVisibilityValues","padding","verticalAlign","background","marginLeft","ColorSchemeLegendWrapper","EmbeddingChartPlotly","filter","traceInfo","onDeselect","onSelected","onSelect","marginRight","getPlots","plotConfig","onZoom","groupStyles","alignItems","justifyContent","formatGroupLabel","inputComponent","inputRef","components","Control","InputProps","inputProps","className","selectProps","classes","input","innerRef","children","innerProps","textFieldProps","Menu","Paper","square","paper","MultiValue","Chip","tabIndex","classNames","chip","chipFocused","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","Typography","noOptionsMessage","Option","MenuItem","buttonRef","selected","component","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","Autocomplete","loadOptions","inputValue","callback","filterOptions","isMulti","item","limit","nmatches","results","ngroups","option","filteredOption","theme","selectStyles","base","palette","primary","root","NoSsr","cacheOptions","styles","InputLabelProps","shrink","defaultOptions","Component","withStyles","flexGrow","flexWrap","flex","spacing","backgroundColor","emphasize","grey","fontSize","position","left","zIndex","marginTop","right","divider","withTheme","ColorSchemeSelector","handleInterpolatorChange","handleInterpolator","Select","Input","select","multiple","getScale","formControl","minWidth","EmbedForm","onMarkerSizeChange","handleMarkerSizeUI","onMarkerSizeKeyPress","parseFloat","handleMarkerSize","onUnselectedMarkerSizeChange","handleUnselectedMarkerSizeUI","onUnselectedMarkerSizeKeyPress","handleUnselectedMarkerSize","onMarkerOpacityChange","handleMarkerOpacityUI","onMarkerOpacityKeyPress","handleMarkerOpacity","onUnselectedMarkerOpacityChange","handleUnselectedMarkerOpacityUI","onUnselectedMarkerOpacityKeyPress","handleUnselectedMarkerOpacity","onNumberOfBinsChange","handleNumberOfBinsUI","onNumberOfBinsKeyPress","parseInt","handleNumberOfBins","onBinSummaryChange","handleBinSummary","handleBinValuesChange","handleBinValues","checked","handleViewChange","handleViewName","selectedFeatures","selectedGroupBy","availableEmbeddings","featureValue","metadataOptions","categorical","allOptions","isDisabled","FormControl","InputLabel","htmlFor","view","ListItemText","handleFeatures","step","onKeyPress","FormControlLabel","control","Switch","numberOfBinsUI","markerSizeUI","unselectedMarkerSizeUI","markerOpacityUI","unselectedMarkerOpacityUI","ownProps","DEFAULT_MARKER_SIZE","DEFAULT_MARKER_OPACITY","DEFAULT_UNSELECTED_MARKER_OPACITY","DEFAULT_BIN_SUMMARY","DEFAULT_NUMBER_BINS","DEFAULT_INTERPOLATOR","DEFAULT_INTERPOLATOR_OBJ","combineReducers","action","loadingApp","App","handleUserMenuClose","userMenuOpen","handleMessageClose","handleUserMenuOpen","userMenuAnchorEl","currentTarget","handleLinkMenuClose","linkMenuOpen","linkMenuAnchorEl","copyLink","linkRef","focus","document","execCommand","handleLinkMenuOpen","linkText","protocol","host","view3d","handleLogout","handleDataset","handleDialog","handleSettings","AppBar","appBar","Toolbar","variant","disableUnderline","displayEmpty","importer","count","Tooltip","IconButton","aria-owns","aria-haspopup","aria-label","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","readOnly","whiteSpace","handleLogin","Drawer","drawer","drawerPaper","anchor","content","Snackbar","ContentProps","autoHideDuration","flexShrink","toolbar","mixins","default","paddingTop","paddingLeft","signIn","createMuiTheme","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","clientId","script","createElement","src","onload","load","client","init","discoveryDocs","scope","getElementsByTagName","appendChild","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.befefd3d.chunk.js","sourcesContent":["class CustomError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n    }\n}\n\nexport default CustomError;\n","import {format} from 'd3-format';\nimport {scaleLinear} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\n\nexport const interpolators = {};\ninterpolators['Diverging'] = [\n    'interpolateBrBG',\n    'interpolatePRGn',\n    'interpolatePiYG',\n    'interpolatePuOr',\n    'interpolateRdBu',\n    'interpolateRdGy',\n    'interpolateRdYlBu',\n    'interpolateRdYlGn',\n    'interpolateSpectral'];\n\ninterpolators['Sequential (Single Hue)'] = [\n    'interpolateBlues',\n    'interpolateGreens',\n    'interpolateGreys',\n    'interpolateOranges',\n    'interpolatePurples',\n    'interpolateReds'];\n\ninterpolators['Sequential (Multi-Hue)'] = [\n    'interpolateViridis',\n    'interpolateInferno',\n    'interpolateMagma',\n    'interpolatePlasma',\n    'interpolateWarm',\n    'interpolateCool',\n    'interpolateCubehelixDefault',\n    'interpolateBuGn',\n    'interpolateBuPu',\n    'interpolateGnBu',\n    'interpolateOrRd',\n    'interpolatePuBuGn',\n    'interpolatePuBu',\n    'interpolatePuRd',\n    'interpolateRdPu',\n    'interpolateYlGnBu',\n    'interpolateYlGn',\n    'interpolateYlOrBr',\n    'interpolateYlOrRd'];\n\ninterpolators['Cyclical'] = ['interpolateRainbow', 'interpolateSinebow'];\nconst intFormat = format(',');\nconst percentFormat = format('.1f');\n\nexport function getLegendSizeHelper(selectedCountMap, scale, sizeScale, index) {\n    let text = null;\n    let width = null;\n    if (selectedCountMap != null) {\n        let d = scale.valueCounts.values[index];\n        let count = selectedCountMap[d] || 0;\n        let percent = count / scale.valueCounts.counts[index];\n        width = sizeScale(percent);\n        text = intFormat(selectedCountMap[d] || 0) + ' / ' + intFormat(scale.valueCounts.counts[index]) + ' (' + percentFormat(percent * 100) + '%)';\n    } else {\n        width = sizeScale(scale.valueCounts.counts[index]);\n        text = intFormat(scale.valueCounts.counts[index]);\n    }\n    return {width: width, text: text};\n}\n\nexport function getLegendSizeScale(selectedCountMap, values, counts) {\n\n    const sizeRange = [10, 60];\n    const sizeDomain = [Number.MAX_VALUE, -Number.MAX_VALUE];\n    values.forEach((value, i) => {\n        let sizeValue;\n        if (selectedCountMap != null) {\n            let count = selectedCountMap[value];\n            let total = counts[i];\n            sizeValue = count / total;\n        } else {\n            sizeValue = counts[i];\n        }\n        sizeDomain[0] = Math.min(sizeDomain[0], sizeValue);\n        sizeDomain[1] = Math.max(sizeDomain[1], sizeValue);\n    });\n    return scaleLinear().domain(sizeDomain).range(sizeRange);\n\n}\n\nexport function getInterpolator(name) {\n    if (!name.startsWith(\"interpolate\")) {\n        name = \"interpolate\" + name;\n    }\n    return scaleChromatic[name];\n}\n\nclass PlotUtil {\n\n    static createPlotConfig() {\n        return {\n            showLink: true,\n            responsive: true,\n            displaylogo: false,\n            modeBarButtonsToRemove: ['hoverCompareCartesian', 'hoverClosestCartesian', 'toggleSpikelines'],// 'sendDataToCloud'\n        };\n    }\n\n    static fixLegend(node) {\n        requestAnimationFrame(() => {\n            if (node) {\n                const scatterpts = node.querySelectorAll('.scatterpts');\n                if (scatterpts) {\n                    scatterpts.forEach(pt => {\n                        pt.setAttribute('d', 'M6,0A6,6 0 1,1 0,-6A6,6 0 0,1 6,0Z');\n                        pt.style.opacity = 1;\n                    });\n                }\n            }\n        });\n    }\n\n    static createAxis(options) {\n        return options.embedding ? {\n            showbackground: false,\n            autorange: true,\n            showgrid: false,\n            zeroline: false,\n            showline: false,\n            autotick: false,\n            ticks: '',\n            showticklabels: false,\n            title: '',\n        } : {\n            showbackground: false,\n            autorange: true,\n            showgrid: false,\n            zeroline: false,\n            showline: false,\n            title: '',\n        };\n    }\n\n    static createPlotLayout(options) {\n        let legendWidth = options.legend || 0;\n        let size = Math.floor(Math.min(window.screen.availWidth - 220, window.screen.availHeight * .95));\n        let layout = {\n            hovermode: 'closest',\n            dragmode: 'select',\n            title: {text: options.title, font: {size: 12}},\n            width: size + legendWidth,\n            height: size,\n            margin: {\n                l: !options.embedding ? 50 : 0,\n                b: !options.embedding ? 50 : 0,\n                r: legendWidth + (!options.embedding ? 100 : 0),\n                t: options.title ? 22 : 0,\n                autoexpand: true\n            },\n            legend: {yanchor: 'top'},\n            autosize: !options.embedding,\n            displaylogo: false,\n            showlegend: options.legend > 0 ? true : false,\n        };\n        if (options.is3d) {\n            layout.scene = {\n                xaxis: PlotUtil.createAxis(options),\n                yaxis: PlotUtil.createAxis(options),\n                zaxis: PlotUtil.createAxis(options),\n            };\n        } else {\n            layout.xaxis = PlotUtil.createAxis(options);\n            layout.yaxis = PlotUtil.createAxis(options);\n        }\n        return layout;\n    }\n}\n\nexport default PlotUtil;\n","import {color} from 'd3-color';\nimport {scaleLinear, scaleOrdinal, scaleSequential} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\nimport CustomError from '../CustomError';\nimport PlotUtil, {getInterpolator} from '../PlotUtil';\n\n\nexport const API = '/api';\nconst authScopes = [\n    'email',\n    'profile',\n    'https://www.googleapis.com/auth/userinfo.profile',\n    'https://www.googleapis.com/auth/contacts.readonly',\n    'https://www.googleapis.com/auth/devstorage.full_control',\n];\n\nexport const SET_UNSELECTED_MARKER_SIZE = 'SET_UNSELECTED_MARKER_SIZE';\nexport const SET_UNSELECTED_MARKER_SIZE_UI = 'SET_UNSELECTED_MARKER_SIZE_UI';\nexport const SET_SERVER_INFO = \"SET_SERVER_INFO\";\nexport const SET_LEGEND_VISIBILITY = 'SET_LEGEND_VISIBILITY';\nexport const ADD_DATASET = 'ADD_DATASET';\nexport const DELETE_DATASET = 'DELETE_DATASET';\nexport const UPDATE_DATASET = 'UPDATE_DATASET';\n\nexport const SET_MARKER_SIZE = 'SET_MARKER_SIZE';\nexport const SET_MARKER_OPACITY = 'SET_MARKER_OPACITY';\n\n\nexport const SET_UNSELECTED_MARKER_OPACITY = 'SET_UNSELECTED_MARKER_OPACITY';\n\n// update chart\n\nexport const SET_SELECTED_VALUE_COUNTS = 'SET_SELECTED_VALUE_COUNTS';\nexport const SET_FEATURES = 'SET_FEATURES';\nexport const SET_GROUP_BY = 'SET_GROUP_BY';\nexport const SET_SELECTED_EMBEDDING = 'SET_SELECTED_EMBEDDING';\nexport const SET_NUMBER_OF_BINS = 'SET_NUMBER_OF_BINS';\nexport const SET_BIN_VALUES = 'SET_BIN_VALUES';\nexport const SET_BIN_SUMMARY = 'SET_BIN_SUMMARY';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const SET_INTERPOLATOR = 'SET_INTERPOLATOR';\n\n// update ui\nexport const SET_EMAIL = 'SET_EMAIL';\nexport const SET_USER = 'SET_USER';\nexport const SET_DATASET = 'SET_DATASET';\n\nexport const SET_DIALOG = 'SET_DIALOG';\n\nexport const EDIT_DATASET_DIALOG = 'EDIT_DATASET_DIALOG';\nexport const IMPORT_DATASET_DIALOG = 'IMPORT_DATASET_DIALOG';\nexport const DELETE_DATASET_DIALOG = 'DELETE_DATASET_DIALOG';\n\nexport const SET_DATASET_CHOICES = 'SET_DATASET_CHOICES';\nexport const RESTORE_VIEW = 'RESTORE_VIEW';\n\nexport const SET_DOT_PLOT_DATA = 'SET_DOT_PLOT_DATA';\nexport const SET_EMBEDDING_DATA = 'SET_EMBEDDING_DATA';\n\nexport const SET_LOADING = 'SET_LOADING';\n\nexport const SET_LOADING_APP = 'LOADING_APP';\n\nexport const SET_NUMBER_OF_BINS_UI = 'SET_NUMBER_OF_BINS_UI';\nexport const SET_MARKER_SIZE_UI = 'SET_MARKER_SIZE_UI';\nexport const SET_MARKER_OPACITY_UI = 'SET_MARKER_OPACITY_UI';\nexport const SET_UNSELECTED_MARKER_OPACITY_UI = 'SET_UNSELECTED_MARKER_OPACITY_UI';\n\nconst TWENTY_COLORS = [\n    '#1f77b4', '#aec7e8', '#ff7f0e',\n    '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd',\n    '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f',\n    '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\nconst CATEGORY_20B = [\n    '#393b79', '#5254a3', '#6b6ecf',\n    '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31',\n    '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b',\n    '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\nconst CATEGORY_20C = [\n    '#3182bd', '#6baed6', '#9ecae1',\n    '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354',\n    '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n    '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\nfunction getUser() {\n    return function (dispatch, state) {\n        fetch(API + '/user', {\n            headers: {\n                'Authorization': 'Bearer ' + getIdToken(),\n                'Content-Type': 'application/json'\n            }\n        }).then(result => result.json()).then(user => dispatch(setUser(user)));\n    };\n}\n\nexport function initGapi() {\n    return function (dispatch, state) {\n        fetch(API + '/server').then(result => result.json()).then(serverInfo => {\n            if (serverInfo.clientId == '') { // serving files locally, no login required\n                dispatch(_setLoadingApp(false));\n                dispatch(_setEmail(''));\n                dispatch(listDatasets()).then(() => {\n                    dispatch(_loadSavedView());\n                    dispatch(loadDefaultDataset());\n                });\n            } else {\n                let script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://apis.google.com/js/api.js';\n                dispatch(setServerInfo(serverInfo));\n                script.onload = (e) => {\n                    window.gapi.load('client:auth2', () => {\n                        window.gapi.client.init({\n                            clientId: serverInfo.clientId,\n                            discoveryDocs: [],\n                            scope: authScopes.join(' '),\n                        }).then(() => {\n                            dispatch(_setLoadingApp(false));\n                            dispatch(initLogin(true));\n                        });\n                    });\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n\n        });\n    };\n}\n\nexport function logout() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signOut().then(() => {\n            dispatch({type: SET_EMAIL, payload: null});\n            dispatch(_setDataset(null));\n        });\n    };\n}\n\nexport function login() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signIn().then(e => {\n            dispatch(initLogin());\n        });\n    };\n}\n\n\nfunction setSelectedValueCounts(payload) {\n    return {type: SET_SELECTED_VALUE_COUNTS, payload: payload};\n}\n\nfunction selectedValueCountsPromise(selectedpoints, legendVisibility, dispatch, getState) {\n    const datasetId = getState().dataset.id;\n    const continuousFeatures = getState().features;\n    const categoricalFeatures = getState().groupBy;\n    const selectedEmbeddings = getState().embeddings;\n\n    let json = {\n        id: datasetId,\n        embedding: selectedEmbeddings[0],\n        keys: continuousFeatures.concat(categoricalFeatures)\n    };\n    if (getState().binValues) {\n        json.nbins = getState().numberOfBins;\n    }\n    if (selectedpoints.length > 0) {\n        json.p = selectedpoints;\n    }\n    if (Object.keys(legendVisibility).length > 0) {\n        json.c = legendVisibility;\n    }\n    let p;\n    // if (selectedEmbeddings.length === 0 || (selectedpoints.length === 0 && json.c == null)) {\n    //     p = Promise.resolve({});\n    // }\n\n    p = fetch(API + '/selected_value_counts',\n        {\n            body: JSON.stringify(json),\n            method: 'POST',\n            headers: {'Authorization': 'Bearer ' + getIdToken()},\n        });\n    p.then(result => result.json()).then(selectedValueCounts => dispatch(setSelectedValueCounts(selectedValueCounts)));\n    return p;\n}\n\n\nfunction setLegendVisibility(payload) {\n    return {type: SET_LEGEND_VISIBILITY, payload: payload};\n}\n\nexport function handleLegendClick(payload) {\n    // TODO update selection or just toggle visibility?\n    return function (dispatch, getState) {\n        let name = payload.name;\n        let value = payload.value;\n        // legend visibility, true means hidden : {'leiden':{'1':true, '5':true}}\n        // keep track of hidden values\n        let legendVisibility = getState().legendVisibility;\n        let values = legendVisibility[name];\n        if (values == null) {\n            values = [];\n            legendVisibility[name] = values;\n        }\n        let index = values.indexOf(value);\n        if (index !== -1) {\n            values.splice(index, 1);\n        } else {\n            values.push(value);\n        }\n        if (Object.keys(legendVisibility).length === 0) {\n            delete legendVisibility[name];\n        }\n        console.log(legendVisibility);\n        dispatch(setLegendVisibility(legendVisibility));\n        selectedValueCountsPromise([], legendVisibility, dispatch, getState);\n    };\n}\n\nexport function handleSelectedPoints(payload) {\n    // we intentionally don't persist selected points\n    let selectedpoints = payload == null ? [] : payload.points[0].data.selectedpoints;\n    return function (dispatch, getState) {\n        selectedValueCountsPromise(selectedpoints, getState().legendVisibility, dispatch, getState);\n    };\n    // TODO linked brushing across embeddings\n\n\n}\n\nexport function restoreView(payload) {\n    return {type: RESTORE_VIEW, payload: payload};\n}\n\nexport function setNumberOfBinsUI(payload) {\n    return {type: SET_NUMBER_OF_BINS_UI, payload: payload};\n}\n\nexport function setMarkerSize(payload) {\n    return {type: SET_MARKER_SIZE, payload: payload};\n}\n\nexport function setMarkerSizeUI(payload) {\n    return {type: SET_MARKER_SIZE_UI, payload: payload};\n}\n\n\nexport function setUnselectedMarkerSize(payload) {\n    return {type: SET_UNSELECTED_MARKER_SIZE, payload: payload};\n}\n\nexport function setUnselectedMarkerSizeUI(payload) {\n    return {type: SET_UNSELECTED_MARKER_SIZE_UI, payload: payload};\n}\n\nexport function setUser(payload) {\n    return {type: SET_USER, payload: payload};\n}\n\nexport function setMarkerOpacityUI(payload) {\n    return {type: SET_MARKER_OPACITY_UI, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacityUI(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY_UI, payload: payload};\n}\n\nexport function setServerInfo(payload) {\n    return {type: SET_SERVER_INFO, payload: payload};\n}\n\nfunction loadDefaultDatasetEmbedding() {\n    return function (dispatch, getState) {\n        const dataset = getState().dataset;\n        const names = dataset.embeddings.map(e => e.name);\n        let priority = {'X_fle': 1, 'X_umap': 2, 'X_tsne': 3, 'X_fitsne': 4};\n        names.sort((a, b) => {\n            a = priority[a] || Number.MAX_VALUE;\n            b = priority[b] || Number.MAX_VALUE;\n            return a - b;\n        });\n\n        if (names.length > 0) {\n            dispatch(setSelectedEmbedding([names[0]]));\n        }\n\n    };\n}\n\nfunction loadDefaultDataset() {\n    return function (dispatch, getState) {\n        if (getState().dataset == null && getState().datasetChoices.length === 1) {\n            dispatch(setDataset(getState().datasetChoices[0].id));\n        }\n    };\n}\n\nfunction _loadSavedView() {\n    return function (dispatch, getState) {\n        let q = window.location.search.substring(3);\n        if (q.length === 0) {\n            return;\n        }\n        let savedView;\n        try {\n            savedView = JSON.parse(window.decodeURIComponent(q));\n        } catch (err) {\n            return dispatch(setMessage('Unable to restore saved view.'));\n        }\n        if (savedView.dataset != null) {\n            if (savedView.colorScheme != null) {\n                let interp = getInterpolator(savedView.colorScheme);\n                if (interp != null) {\n                    savedView.colorScheme = {\n                        name: savedView.colorScheme,\n                        value: interp\n                    };\n                }\n            }\n            dispatch(setDataset(savedView.dataset))\n                .then(() => dispatch(restoreView(savedView)))\n                .then(() => dispatch(_updateEmbedding({\n                    embedding: true,\n                    dotPlot: true,\n                    clear: true\n                }))).catch(err => {\n                console.log(err);\n                dispatch(setMessage('Unable to restore saved view.'));\n            });\n\n        }\n    };\n}\n\nexport function initLogin(loadSavedView) {\n    return function (dispatch, getState) {\n        let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n        if (isSignedIn) {\n            let googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n            let email = googleUser.getBasicProfile().getEmail();\n            dispatch(_setEmail(email));\n            dispatch(getUser());\n            dispatch(listDatasets()).then(() => {\n                if (loadSavedView) {\n                    dispatch(_loadSavedView());\n                }\n            });\n\n        }\n    };\n}\n\n// export function getAccessToken() {\n//     return window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n// }\n\nexport function getIdToken() {\n    return typeof window.gapi !== 'undefined' ? window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token : '';\n}\n\nexport function saveDataset(payload) {\n    return function (dispatch, getState) {\n        const readers = payload.readers;\n        const name = payload.name;\n        const url = payload.url;\n\n        if (name == '' || url === '') {\n            return;\n        }\n        let bucket = url.substring('gs://'.length);\n        let slash = bucket.indexOf('/');\n        // let object = encodeURIComponent(bucket.substring(slash + 1));\n        // bucket = encodeURIComponent(bucket.substring(0, slash));\n        let isEdit = payload.dataset != null;\n        dispatch(_setLoading(true));\n        let updateDatasetPermissionPromise = null;\n        const serverEmail = getState().serverInfo.email;\n        const updatePermissions = !isEdit || url !== payload.dataset.url;\n        // if (updatePermissions) {\n\n        // updateDatasetPermissionPromise = fetch(\n        //     'https://www.googleapis.com/storage/v1/b/' + bucket + '/o/' + object,\n        //     {\n        //         body: JSON.stringify({\n        //             'acl': [{\n        //                 'entity': 'user-' + serverEmail,\n        //                 'role': 'READER'\n        //             }]\n        //         }),\n        //         method: 'PATCH',\n        //         headers: {'Authorization': 'Bearer ' + getAccessToken(), 'Content-Type': 'application/json'},\n        //     });\n\n        // } else {\n        updateDatasetPermissionPromise = Promise.resolve({ok: true});\n        // }\n        updateDatasetPermissionPromise.then(permissionsResponse => {\n\n            // if (!permissionsResponse.ok) {\n            //     dispatch(setMessage('Unable to set dataset read permissions. Please ensure that you are the dataset owner or manually add ' + serverEmail + ' as a reader.'));\n            // }\n        }).then(() => fetch(API + '/dataset',\n            {\n                body: JSON.stringify(\n                    {id: payload.dataset != null ? payload.dataset.id : null, url: url, name: name, readers: readers}),\n                method: isEdit ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            })).then(importDatasetResponse => importDatasetResponse.json()).then(importDatasetResult => {\n            if (isEdit) {\n                dispatch(updateDataset({name: name, id: importDatasetResult.id, owner: true}));\n                dispatch(setMessage(updatePermissions ? 'Please ensure that ' + serverEmail + ' is a \"Storage Object Viewer\"' : 'Dataset updated'));\n            } else {\n                dispatch(_addDataset({name: name, id: importDatasetResult.id, owner: true}));\n                dispatch(setMessage(updatePermissions ? 'Please ensure that ' + serverEmail + ' is a \"Storage Object Viewer\"' : 'Dataset created'));\n            }\n\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function deleteDataset(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        fetch(API + '/dataset',\n            {\n                body: JSON.stringify(\n                    {id: payload.dataset.id}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(() => {\n            dispatch(_deleteDataset({id: payload.dataset.id}));\n            dispatch(setMessage('Dataset deleted'));\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete dataset. Please try again.');\n        });\n    };\n}\n\nfunction _addDataset(payload) {\n    return {type: ADD_DATASET, payload: payload};\n}\n\nfunction _deleteDataset(payload) {\n    return {type: DELETE_DATASET, payload: payload};\n}\n\nexport function updateDataset(payload) {\n    return {type: UPDATE_DATASET, payload: payload};\n}\n\nexport function setMessage(payload) {\n    return {type: SET_MESSAGE, payload: payload};\n}\n\nexport function setInterpolator(payload) {\n    return {type: SET_INTERPOLATOR, payload: payload};\n}\n\nfunction _setEmbeddingData(payload) {\n    return {type: SET_EMBEDDING_DATA, payload: payload};\n}\n\nexport function setDialog(payload) {\n    return {type: SET_DIALOG, payload: payload};\n}\n\nfunction _setDatasetChoices(payload) {\n    return {type: SET_DATASET_CHOICES, payload: payload};\n}\n\nfunction _setLoading(payload) {\n    return {type: SET_LOADING, payload: payload};\n}\n\nfunction _setLoadingApp(payload) {\n    return {type: SET_LOADING_APP, payload: payload};\n}\n\nfunction _setDataset(payload) {\n    return {type: SET_DATASET, payload: payload};\n}\n\n\nexport function setMarkerOpacity(payload) {\n    return {type: SET_MARKER_OPACITY, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacity(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY, payload: payload};\n}\n\n\nfunction _setDotPlotData(payload) {\n    return {type: SET_DOT_PLOT_DATA, payload: payload};\n}\n\nfunction _setEmail(payload) {\n    return {type: SET_EMAIL, payload: payload};\n}\n\n\nexport function setFeatures(payload) {\n    const value = payload;\n    return function (dispatch, getState) {\n        const state = getState();\n        const obsCat = state.dataset.obsCat;\n        const priorFeatures = state.features;\n        const priorGroupBy = state.groupBy;\n        const features = [];\n        const groupBy = [];\n        value.forEach(val => {\n            if (obsCat.indexOf(val) !== -1) {\n                groupBy.push(val);\n            } else {\n                features.push(val);\n            }\n        });\n        if (features.length !== priorFeatures.length) {\n            dispatch(_setFeatures(features));\n        }\n        if (groupBy.length !== priorGroupBy.length) {\n            dispatch(_setGroupBy(groupBy));\n        }\n    };\n}\n\nfunction _setFeatures(payload) {\n\n    return function (dispatch, getState) {\n        let prior = getState().features;\n        dispatch({type: SET_FEATURES, payload: payload});\n        dispatch(_updateEmbedding({embedding: true, dotPlot: true}, err => {\n            dispatch({type: SET_FEATURES, payload: prior});\n        }));\n    };\n}\n\nfunction _setGroupBy(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().groupBy; // in case of error, restore\n        let legendVisibility = getState().legendVisibility;\n        let legendVisibilityChanged = false;\n        for (let key in legendVisibility) {\n            if (payload.indexOf(key) === -1) {\n                delete legendVisibility[key];\n                legendVisibilityChanged = true;\n            }\n        }\n        if (legendVisibilityChanged) {\n            dispatch({type: SET_LEGEND_VISIBILITY, payload: legendVisibility});\n        }\n        dispatch({type: SET_GROUP_BY, payload: payload}); // updated choices\n        dispatch(_updateEmbedding({embedding: true, dotPlot: true}, err => {\n            dispatch({type: SET_GROUP_BY, payload: prior});\n        }));\n    };\n}\n\nexport function setSelectedEmbedding(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().embeddings;\n        dispatch({type: SET_SELECTED_EMBEDDING, payload: payload});\n        dispatch(_updateEmbedding({embedding: true, clear: true}, err => {\n            dispatch({type: SET_SELECTED_EMBEDDING, payload: prior});\n        }));\n    };\n}\n\n\nexport function setNumberOfBins(payload) {\n    return function (dispatch, getState) {\n        if (getState().numberOfBins !== payload) {\n            let prior = getState().numberOfBins;\n            dispatch({type: SET_NUMBER_OF_BINS, payload: payload});\n            dispatch(_updateEmbedding({embedding: true, clear: true}, err => {\n                dispatch({type: SET_NUMBER_OF_BINS, payload: prior});\n            }));\n        }\n    };\n}\n\nexport function setBinSummary(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().binSummary;\n        dispatch({type: SET_BIN_SUMMARY, payload: payload});\n\n        dispatch(_updateEmbedding({embedding: true, clear: true}, err => {\n            dispatch({type: SET_BIN_SUMMARY, payload: prior});\n        }));\n    };\n}\n\nexport function setBinValues(payload) {\n\n    return function (dispatch, getState) {\n        let prior = getState().binValues;\n        dispatch({type: SET_BIN_VALUES, payload: payload});\n        dispatch(_updateEmbedding({embedding: true, clear: true}, err => {\n            dispatch({type: SET_BIN_VALUES, payload: prior});\n        }));\n\n    };\n}\n\nexport function setDataset(id) {\n    return function (dispatch, getState) {\n        const datasetChoices = getState().datasetChoices;\n        let choice = null;\n        for (let i = 0; i < datasetChoices.length; i++) {\n            if (datasetChoices[i].id === id) {\n                choice = datasetChoices[i];\n                break;\n            }\n        }\n        if (choice == null) {\n            dispatch(setMessage('Unable to find dataset'));\n            return;\n        }\n        // force re-render selected dataset dropdown\n        dispatch(_setDataset({\n            owner: choice.owner,\n            name: choice.name,\n            id: id,\n            embeddings: [],\n            features: [],\n            obs: [],\n            obsCat: []\n        }));\n        dispatch(_setLoading(true));\n        let url = [API + '/schema?id=' + id];\n\n        return fetch(url.join(''), {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        }).then(result => {\n            let newDataset;\n            if (result.version === '1') {\n                newDataset = {\n                    owner: choice.owner,\n                    name: choice.name,\n                    id: id,\n                    embeddings: result.embeddings,\n                    features: result.var,\n                    obsCat: result.obs_cat,\n                    nObs: result.n_obs,\n                    obs: result.obs\n                };\n            }\n            dispatch(_setDataset(newDataset));\n            dispatch(loadDefaultDatasetEmbedding());\n            return newDataset;\n\n\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve dataset. Please try again.');\n            // dispatch(_setDataset(null));\n        });\n    };\n}\n\n// dot plot depends on features, groupBy\n// embedding chart depends on groupBy, features, embedding (also markerSize, colorScale which don't require API\n// call)\n/**\n *\n * @param options.embedding\n * @param options.dotPlot\n * @param options.clear Clear cached data\n * @returns {function(*, *): Promise<any | never>}\n */\nfunction _updateEmbedding(options, onError) {\n\n    return function (dispatch, getState) {\n\n        const continuousFeatures = getState().features;\n        const categoricalFeatures = getState().groupBy;\n\n        if (getState().dataset == null) {\n            return;\n        }\n        dispatch(_setLoading(true));\n        const datasetId = getState().dataset.id;\n        const obs = getState().dataset.obs;\n        const selectedEmbeddings = getState().embeddings;\n        if (options.embedding && selectedEmbeddings.length === 0) {\n            options.embedding = false;\n        }\n        if (options.dotPlot && continuousFeatures.length === 0) {\n            options.dotPlot = false;\n        }\n\n        let embeddingData = getState().embeddingData;\n        if (options.clear) {\n            embeddingData = [];\n        }\n        let cachedFeatureNames = {};\n        const currentFeatures = continuousFeatures.concat(categoricalFeatures);\n        let requestedFeatures = [];\n        const markerSize = getState().markerSize;\n        const markerOpacity = getState().markerOpacity;\n        const unselectedMarkerSize = getState().unselectedMarkerSize;\n\n        const unselectedMarkerOpacity = getState().unselectedMarkerOpacity;\n\n        embeddingData.forEach(trace => {\n            // get cached traces\n            cachedFeatureNames[trace.name] = true;\n            let active = currentFeatures.indexOf(trace.name) !== -1;\n            if (active) {\n                trace.date = new Date();\n                trace.layout = PlotUtil.createPlotLayout(\n                    {embedding: true, is3d: selectedEmbeddings[0].endsWith('3d'), legend: false, title: trace.name});\n            }\n            trace.active = active;\n        });\n\n        let embeddingUrl = [API + '/slice?id=' + datasetId];\n        let dotPlotUrl = [API + '/slice?id=' + datasetId];\n        // TODO only get new features for dot plot\n        // only get new features for embedding plot\n        let ngenes = 0;\n        continuousFeatures.forEach(feature => {\n            if (obs.indexOf(feature) === -1) {\n                dotPlotUrl.push('&key=' + feature);\n                ngenes++;\n            }\n            let isCached = cachedFeatureNames[feature] != null;\n            if (!isCached) {\n                requestedFeatures.push(feature);\n                embeddingUrl.push('&key=' + feature);\n            }\n        });\n\n        if ((options.embedding || options.dotPlot)) {\n            categoricalFeatures.forEach(feature => {\n                dotPlotUrl.push('&key=' + feature);\n                let isCached = cachedFeatureNames[feature] != null;\n                if (!isCached) {\n                    requestedFeatures.push(feature);\n                    embeddingUrl.push('&key=' + feature);\n                }\n            });\n        }\n\n        let binValues = getState().numberOfBins > 0 && getState().binValues;\n        if (options.embedding && binValues) {\n            embeddingUrl.push('&nbins=' + getState().numberOfBins);\n            embeddingUrl.push('&reduce_function=' + getState().binSummary);\n        }\n\n        if (options.embedding && selectedEmbeddings.length > 0) {\n            selectedEmbeddings.forEach(selectedEmbedding => embeddingUrl.push('&embedding=' + selectedEmbedding));\n        }\n\n        let interpolator = getState().interpolator;\n        let selectedValueCounts = getState().selectedValueCounts;\n        let promises = [];\n        if (options.dotPlot) {\n            let dotPlotPromise = null;\n            if (ngenes > 0 && categoricalFeatures.length > 0) {\n                dotPlotPromise = fetch(dotPlotUrl.join(''),\n                    {headers: {'Authorization': 'Bearer ' + getIdToken()}})\n                    .then(response => {\n                        return response.json();\n                    });\n            } else {\n                dotPlotPromise = Promise.resolve({stats: {}});\n            }\n            promises.push(dotPlotPromise);\n            dotPlotPromise.then(result => { // TODO cache\n                dispatch(_setDotPlotData(result.dotplot || null));\n\n            });\n        }\n\n        if (options.embedding) {\n            let valueCountsPromise = selectedValueCountsPromise([], getState().legendVisibility, dispatch, getState);\n            let embeddingPromise = fetch(embeddingUrl.join(''), {headers: {'Authorization': 'Bearer ' + getIdToken()}})\n                .then(response => {\n                    return response.json();\n                });\n\n            promises.push(embeddingPromise);\n            promises.push(valueCountsPromise);\n            let rgbScale = scaleLinear().domain([0, 255]).range([0, 1]);\n            embeddingPromise.then(embeddingResult => {\n                    const embeddingValues = embeddingResult.embedding.values;\n                    const categories = embeddingResult.embedding.categories;\n                    let coordinates = {};\n                    const is3d = selectedEmbeddings[0].endsWith('3d');\n\n                    // TODO > 1 embedding\n                    coordinates[selectedEmbeddings[0] + '_1'] = new Float32Array(embeddingValues[selectedEmbeddings[0] + '_1']);\n                    coordinates[selectedEmbeddings[0] + '_2'] = new Float32Array(embeddingValues[selectedEmbeddings[0] + '_2']);\n                    if (is3d) {\n                        coordinates[selectedEmbeddings[0] + '_3'] = new Float32Array(embeddingValues[selectedEmbeddings[0] + '_3']);\n                    }\n\n\n                    for (let name in embeddingValues) {\n                        if (name in coordinates) { // skip coordinate columns and cell ids\n                            continue;\n                        }\n\n                        let x = coordinates[selectedEmbeddings[0] + '_1'];\n                        let y = coordinates[selectedEmbeddings[0] + '_2'];\n                        let z = coordinates[selectedEmbeddings[0] + '_3'];\n                        let values = embeddingValues[name];\n                        let isCategorical = categories[name] != null;\n                        let colorScale = null;\n\n                        let min = null;\n                        let max = null;\n                        if (!isCategorical) {\n                            min = Number.MAX_VALUE;\n                            max = -Number.MAX_VALUE;\n                            for (let i = 0, n = values.length; i < n; i++) {\n                                let value = values[i];\n                                min = value < min ? value : min;\n                                max = value > max ? value : max;\n                            }\n                            colorScale = scaleSequential(interpolator.value).domain([min, max]);\n                            colorScale.valueCounts = embeddingResult.embedding.obs[name];\n                        } else {\n                            let traceUniqueValues = categories[name].values;\n                            colorScale = scaleOrdinal(\n                                traceUniqueValues.length <= 10 ? schemeCategory10 : (traceUniqueValues.length <= 20 ? CATEGORY_20B : CATEGORY_20B.concat(\n                                    CATEGORY_20C))).domain(traceUniqueValues);\n                            colorScale.valueCounts = categories[name];\n\n                        }\n\n                        let colors = [];\n                        for (let i = 0, n = values.length; i < n; i++) {\n                            let rgb = color(colorScale(values[i]));\n                            colors.push([rgbScale(rgb.r), rgbScale(rgb.g), rgbScale(rgb.b)]);\n                        }\n\n                        // TODO show tooltips, plot higher values on top?\n                        let chartData = {\n                            hoverinfo: 'text',\n                            showlegend: false,\n                            name: name,\n                            mode: 'markers',\n                            type: is3d ? 'scatter3d' : 'scattergl',\n                            hoveron: 'points',\n                            x: x,\n                            y: y,\n                            marker: {\n                                size: markerSize,\n                                color: colors,\n                                opacity: markerOpacity,\n                                showscale: false,\n                            },\n                            unselected: {marker: {opacity: unselectedMarkerOpacity, size: unselectedMarkerSize}},\n                            selectedpoints: selectedValueCounts.indices && selectedValueCounts.indices.length === 0 ? null : selectedValueCounts.indices,\n                            values: values,\n                            text: values,\n                        };\n                        if (is3d) {\n                            chartData.z = z;\n                        }\n\n\n                        chartData = [chartData];\n\n                        let layout = PlotUtil.createPlotLayout(\n                            {embedding: true, is3d: is3d, legend: false, title: name});\n                        embeddingData.push(\n                            {\n                                date: new Date(),\n                                active: true,\n                                domain: isCategorical ? null : [min, max],\n                                colorScale: colorScale,\n                                continuous: !isCategorical,\n                                data: chartData,\n                                name: name,\n                                layout: layout,\n                                isCategorical: isCategorical,\n                            });\n                    }\n                    embeddingData.sort((a, b) => {\n                        a = a.name.toLowerCase();\n                        b = b.name.toLowerCase();\n                        return a < b ? -1 : 1;\n                    });\n                    dispatch(_setEmbeddingData(embeddingData.slice(0)));\n\n                },\n            );\n        }\n        Promise.all(promises).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve data. Please try again.');\n            if (onError) {\n                onError(err);\n            }\n        });\n    };\n\n}\n\nfunction handleError(dispatch, err, message) {\n    console.log(err);\n    if (err.status === 401) {\n        dispatch(setMessage('Your session has expired. Please login again.'));\n        return dispatch(logout());\n    }\n    if (message == null) {\n\n        message = err instanceof CustomError ? err.message : 'An unexpected error occurred. Please try again.';\n    }\n    dispatch(setMessage(new Error(message)));\n}\n\nexport function listDatasets() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        return fetch(API + '/datasets', {headers: {'Authorization': 'Bearer ' + getIdToken()}})\n            .then(response => {\n                return response.json();\n            })\n            .then(choices => {\n                dispatch(_setDatasetChoices(choices));\n            })\n            .finally(() => {\n                dispatch(_setLoading(false));\n            })\n            .catch(err => {\n                handleError(dispatch, err, 'Unable to retrieve datasets. Please try again.');\n            });\n    };\n}\n\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {deleteDataset, setDialog} from './actions';\n\nclass DeleteDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleDelete = () => {\n        this.setState({loading: true});\n        this.props.handleDelete({dataset: this.props.dataset});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"delete-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"delete-dataset-dialog-title\">Delete Dataset</DialogTitle>\n                <DialogContent>\n                    <h3>Are you sure you want to delete {this.props.dataset.name}?</h3>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleDelete} color=\"primary\">\n                        Delete <DeleteIcon/>\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        email: state.email,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        handleDelete: value => {\n            dispatch(deleteDataset(value));\n        },\n\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DeleteDatasetDialog));\n\n","import {format} from 'd3-format';\nimport {scaleLinear} from 'd3-scale';\nimport React from 'react';\n\nclass ColorSchemeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n        const colorScale = this.props.scale;\n        if (colorScale == null) {\n            return;\n        }\n        let domain = colorScale.domain();\n        if (domain[0] === domain[1]) {\n            return;\n        }\n        let value = domain[0];\n        let nsteps = this.props.nsteps || 10;\n\n        let stepSize = (domain[1] - domain[0]) / nsteps;\n        let legendHeight = 20;\n        let gradient = context.createLinearGradient(0, 0, width, legendHeight);\n        let valueToFraction = scaleLinear().range([0, 1]).domain(domain).clamp(true);\n        for (let i = 0; i < nsteps; i++) {\n            if (i === (nsteps - 1)) {\n                value = domain[1];\n            }\n            let f = valueToFraction(value);\n            if (!isNaN(f)) {\n                let color = colorScale(value);\n                gradient.addColorStop(f, color);\n            }\n            value += stepSize;\n        }\n        context.fillStyle = gradient;\n        context.fillRect(0, 0, width, legendHeight);\n        context.strokeStyle = 'LightGrey';\n        context.strokeRect(0, 0, width, legendHeight);\n        if (this.props.label > 0) {\n            let numberFormat = format('.1f');\n            context.font = '12px Helvetica';\n            context.textBaseline = 'top';\n            context.fillStyle = 'black';\n\n            context.textAlign = 'left';\n            context.fillText(numberFormat(domain[0]), 0, legendHeight + 2);\n            context.textAlign = 'right';\n            context.fillText(numberFormat(domain[1]), width, legendHeight + 2);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    handleStart = (e) => {\n\n    };\n\n    handleDrag = (e, data) => {\n\n\n    };\n\n    handleStop = (e) => {\n\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    render() {\n\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        this.backingScale = backingScale;\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height, display: 'block'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n\n        return (\n            <canvas width={width * backingScale} height={height * backingScale} ref={this.ref} style={style}></canvas>\n\n        );\n\n    }\n}\n\nexport default ColorSchemeLegend;\n\n","import {format} from 'd3-format';\nimport {scaleLinear} from 'd3-scale';\nimport React from 'react';\n\nclass SizeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n        const scale = this.props.scale;\n        if (scale == null) {\n            return;\n        }\n        let domain = scale.domain();\n        let value = domain[0];\n        let nsteps = this.props.nsteps || 3;\n\n        let stepSize = (domain[1] - domain[0]) / nsteps;\n        let legendHeight = 20;\n        let margin = 25;\n        let valueToX = scaleLinear().range([margin, width - margin]).domain([0, nsteps - 1]).clamp(true);\n        let valueToRadius = scaleLinear().range([2, 10]).domain(domain).clamp(true);\n        let numberFormat = format('.0f');\n        context.font = '12px Helvetica';\n        context.textBaseline = 'top';\n        context.fillStyle = 'black';\n        context.textAlign = 'center';\n\n        for (let i = 0; i < nsteps; i++) {\n            if (i === (nsteps - 1)) {\n                value = domain[1];\n            }\n            let pix = valueToX(i);\n\n            let radius = valueToRadius(value);\n            context.beginPath();\n            context.arc(pix, 10, radius, 0, Math.PI * 2);\n            context.stroke();\n\n            context.fillText(numberFormat(100 * value), pix, legendHeight + 2);\n\n            value += stepSize;\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    render() {\n\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        this.backingScale = backingScale;\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * backingScale} height={height * backingScale} ref={this.ref} style={style}></canvas>);\n\n    }\n}\n\nexport default SizeLegend;\n\n","import {format} from 'd3-format';\nimport {scaleLinear} from 'd3-scale';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport {connect} from 'react-redux';\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport PlotUtil from './PlotUtil';\nimport SizeLegend from './SizeLegend';\n\nconst Plot = createPlotlyComponent(window.Plotly);\n\nclass DotPlot extends React.PureComponent {\n\n    render() {\n        if (this.props.data == null) {\n            return <div/>;\n        }\n        let data = this.props.data;\n        let index = data.index || [''];\n        let colorMin = Number.MAX_VALUE;\n        let colorMax = -Number.MAX_VALUE;\n        let sizeMin = Number.MAX_VALUE;\n        let sizeMax = -Number.MAX_VALUE;\n        // set min and max values\n        let featureNameToValues = {};\n        for (let key in data) {\n            if (key !== 'index') {\n                let values = data[key];\n                let min;\n                let max;\n                let index = key.indexOf(',');\n                let name = key.substring(2, index - 1);\n                let type = key.substring(index + 3, key.length - 2);\n\n                let featureValues = featureNameToValues[name];\n                if (featureValues === undefined) {\n                    featureValues = {};\n                    featureNameToValues[name] = featureValues;\n                }\n                if (type === 'non_zero') {\n                    min = sizeMin;\n                    max = sizeMax;\n                    featureValues.fraction = values;\n                } else if (type === 'mean') {\n                    min = colorMin;\n                    max = colorMax;\n                    featureValues.summary = values;\n                } else {\n                    console.log('Unknown type: ' + type + '.');\n                }\n                for (let j = 0; j < values.length; j++) {\n                    min = Math.min(min, values[j]);\n                    max = Math.max(max, values[j]);\n                }\n                if (type === 'non_zero') {\n                    sizeMin = min;\n                    sizeMax = max;\n                } else {\n                    colorMin = min;\n                    colorMax = max;\n                }\n            }\n        }\n        ;\n        if (colorMin === colorMax) {\n            colorMax++;\n        }\n        if (sizeMin === sizeMax) {\n            sizeMin = 0;\n            sizeMax = 1;\n        }\n\n        let maxDiameter = 14;\n        let numberFormat = format('.1f');\n        let colorScale = scaleLinear().domain([colorMin, colorMax]).range(['blue', 'red']);\n        let sizeScale = scaleLinear().domain([sizeMin, sizeMax]).range([1, maxDiameter]).clamp(true);\n        let size = [];\n        let color = [];\n        let x = [];\n        let y = [];\n        let text = [];\n        let names = [];\n        for (let feature in featureNameToValues) {\n            names.push(feature);\n            let featureValues = featureNameToValues[feature];\n            let summary = featureValues.summary;\n            let fraction = featureValues.fraction;\n            for (let j = 0; j < summary.length; j++) {\n                color.push(colorScale(summary[j]));\n                size.push(sizeScale(fraction[j]));\n                y.push(feature);\n                x.push(index[j]);\n                text.push('mean: ' + numberFormat(summary[j]) + ', % non-zero: ' + numberFormat(100 * fraction[j]));\n            }\n        }\n\n\n        let trace = {\n            type: 'scatter',\n            x: x,\n            y: y,\n            text: text,\n            mode: 'markers',\n            name: '',\n            sizemode: 'diameter',\n            marker: {\n                color: color,\n                symbol: 'circle',\n                size: size,\n            },\n        };\n        let traces = [trace];\n        let config = PlotUtil.createPlotConfig();\n        let embedding = PlotUtil.createPlotLayout({embedding: false});\n        embedding.xaxis.type = 'category';\n        embedding.yaxis.type = 'category';\n\n        embedding.height = 100 + names.length * (maxDiameter + 2);\n        embedding.width = Math.max(300, 70 + index.length * (maxDiameter + 2));\n\n        return (<div style={{maxWidth: 800, overflow: 'auto', border: '1px solid LightGrey'}}>\n            <Plot\n                data={traces}\n                embedding={embedding}\n                config={config}\n            />\n            <ColorSchemeLegend style={{display: 'block'}}\n                               width={300}\n                               label={true} height={40}\n                               scale={colorScale}/>\n            <SizeLegend style={{display: 'block'}}\n                        width={150}\n                        label={true} height={40}\n                        scale={sizeScale}/>\n\n        </div>);\n    }\n}\n\nDotPlot.propTypes = {\n    traces: PropTypes.array,\n};\n\nconst mapStateToProps = state => {\n    return {\n        data: state.dotPlotData,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DotPlot));\n\n","import {CircularProgress} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {API, EDIT_DATASET_DIALOG, getIdToken, saveDataset, setDialog, setMessage} from './actions';\n\nclass EditDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            datasetName: this.props.dataset != null ? this.props.dataset.name : '',\n            readers: '',\n            loading: this.props.dataset != null,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.dataset != null) {\n            fetch(API + '/dataset?id=' + this.props.dataset.id,\n                {\n                    method: 'GET',\n                    headers: {'Authorization': 'Bearer ' + getIdToken()},\n                }).then(result => result.json()).then(datasetInfo => {\n                let readers = [];\n                for (let email in datasetInfo.roles) {\n                    if (datasetInfo[email] === 'reader') {\n                        readers.push(email);\n                    }\n                }\n\n                this.setState({\n                    datasetName: datasetInfo.name,\n                    loading: false,\n                    url: datasetInfo.url,\n                    readers: readers.join(', '),\n                });\n            }).catch(err => {\n                this.props.handleError('Unable to retrieve dataset details. Please try again.');\n                this.props.handleCancel();\n            });\n        }\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let datasetName = this.state.datasetName.trim();\n        let url = this.state.url.trim();\n        if (datasetName === '' || url === '') {\n            return;\n        }\n        this.setState({loading: true});\n        let tokens = this.state.readers.split(',');\n\n        let uniqueReaders = new Set();\n        for (let i = 0; i < tokens.length; i++) {\n            let reader = tokens[i].trim().toLowerCase();\n            if (reader !== '') {\n                uniqueReaders.add(reader);\n            }\n        }\n        let readers = Array.from(uniqueReaders);\n        this.props.handleSave({dataset: this.props.dataset, name: datasetName, url: url, readers: readers});\n    };\n\n    onEmailChanged = (event) => {\n        this.setState({readers: event.target.value});\n    };\n    onUrlChanged = (event) => {\n        this.setState({url: event.target.value});\n    };\n    onDatasetNameChanged = (event) => {\n        this.setState({datasetName: event.target.value});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-dataset-dialog-title\">{this.props.dataset == null\n                    ? 'Import'\n                    : 'Edit'} Dataset</DialogTitle>\n                <DialogContent>\n                    {this.state.loading && <CircularProgress/>}\n                    <TextField\n                        disabled={this.state.loading}\n                        required={true}\n                        value={this.state.datasetName}\n                        onChange={this.onDatasetNameChanged}\n                        margin=\"dense\"\n                        label=\"Dataset name\"\n                        fullWidth\n                    />\n\n                    {!this.state.loading &&\n                    <TextField\n                        required={true}\n                        value={this.state.url}\n                        onChange={this.onUrlChanged}\n                        margin=\"dense\"\n                        helperText={\"Please ensure that \" + this.props.serverEmail + \" has \\\"Storage Object Viewer\\\" permissions\"}\n                        label=\"Dataset URL (e.g. gs://my_bucket/my_dataset.parquet)\"\n                        fullWidth\n                    />}\n\n                    {!this.state.loading &&\n                    <TextField\n                        value={this.state.readers}\n                        onChange={this.onEmailChanged}\n                        margin=\"dense\"\n                        label=\"Comma separated list of emails to share with\"\n                        fullWidth\n                        multiline\n                    />}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dialog === EDIT_DATASET_DIALOG ? state.dataset : null,\n        serverEmail: state.serverInfo.email\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDataset(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EditDatasetDialog));\n\n","import React from 'react';\nimport {getLegendSizeHelper, getLegendSizeScale} from './PlotUtil';\n\n\nclass CategoricalLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = (value, event) => {\n        event.preventDefault();\n        this.props.handleClick({name: this.props.name, value: value});\n    };\n\n\n    render() {\n        const scale = this.props.scale;\n        const legendVisibilityValues = this.props.legendVisibility[this.props.name] || [];\n        const domain = scale.domain();\n        const selectedValueCounts = this.props.selectedValueCounts;\n        const selectedCountMap = selectedValueCounts.categories != null ? selectedValueCounts.categories[this.props.name] : null;\n        let sizeScale = getLegendSizeScale(selectedCountMap, scale.valueCounts.values, scale.valueCounts.counts);\n        return (\n            <div style={{display: 'inline-block', padding: 10, verticalAlign: 'top'}}>{domain.map((d, i) => {\n                let legend = getLegendSizeHelper(selectedCountMap, scale, sizeScale, i);\n                let opacity = legendVisibilityValues.indexOf(d) !== -1 ? 0.4 : 1;\n                return <div style={{opacity: opacity}} onClick={(e) => this.handleClick(d, e)} key={d}>\n\n                    <div style={{\n                        display: 'inline-block',\n                        width: legend.width,\n                        height: 10,\n                        background: scale(d)\n                    }}/>\n                    <label\n                        style={{marginLeft: 4}}>{d + ' - ' + legend.text}</label>\n                </div>;\n            })\n            }</div>);\n    }\n}\n\nexport default CategoricalLegend;\n\n\n","import {format} from 'd3-format';\nimport React from 'react';\n\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport {getLegendSizeHelper, getLegendSizeScale} from './PlotUtil';\n\nconst intFormat = format(',');\n\nclass ColorSchemeLegendWrapper extends React.PureComponent {\n\n    render() {\n\n        const style = this.props.style;\n        const scale = this.props.scale;\n        const name = this.props.name;\n\n\n        let values = scale.valueCounts.values;\n        let domain = scale.domain();\n        if (domain[0] === domain[1]) {\n            values = [];\n        }\n\n        const selectedValueCounts = this.props.selectedValueCounts;\n        const selectedCountMap = selectedValueCounts.categories != null ? selectedValueCounts.categories[name] : null;\n        if (selectedCountMap) {\n            // TODO fix hack below\n            if (selectedCountMap['True'] != null) {\n                selectedCountMap['true'] = selectedCountMap['True'];\n            }\n            if (selectedCountMap['False'] != null) {\n                selectedCountMap['false'] = selectedCountMap['False'];\n            }\n        }\n\n        let sizeScale = getLegendSizeScale(selectedCountMap, scale.valueCounts.values, scale.valueCounts.counts);\n\n\n        return (\n            <div style={style}>{values.map((d, i) => {\n                let label = d;\n                if (label == true) {\n                    label = 'expressed';\n                } else if (label == false) {\n                    label = 'not expressed';\n                }\n                let legend = getLegendSizeHelper(selectedCountMap, scale, sizeScale, i);\n                return <div key={d}>\n\n                    <div style={{\n                        display: 'inline-block',\n                        width: legend.width,\n                        height: 10,\n                        background: 'LightGrey'\n                    }}/>\n                    <label\n                        style={{marginLeft: 4}}>{label + ' - ' + legend.text}</label>\n                </div>;\n            })\n            }<ColorSchemeLegend width={this.props.width} height={this.props.height} style={style} scale={scale}\n                                label={this.props.label}></ColorSchemeLegend></div>);\n\n    }\n}\n\nexport default ColorSchemeLegendWrapper;\n\n","import React from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\n\nimport {connect} from 'react-redux';\nimport {handleLegendClick, handleSelectedPoints} from './actions';\nimport CategoricalLegend from './CategoricalLegend';\nimport ColorSchemeLegendWrapper from './ColorSchemeLegendWrapper';\n\nconst Plot = createPlotlyComponent(window.Plotly);\n\nclass EmbeddingChartPlotly extends React.PureComponent {\n\n\n    getPlots() {\n        return this.props.data.filter(traceInfo => traceInfo.active).map(traceInfo => {\n            return (<div style={{display: 'inline-block', border: '1px solid LightGrey'}} key={traceInfo.name}><Plot\n                key={traceInfo.name}\n                data={traceInfo.data}\n                layout={traceInfo.layout}\n                config={this.props.config}\n                onDeselect={this.props.onDeselect}\n                onSelected={this.props.onSelect}\n            />\n                {traceInfo.continuous ?\n                    <ColorSchemeLegendWrapper style={{display: 'block', marginLeft: 'auto', marginRight: 'auto'}}\n                                              width={300}\n                                              label={true} height={40}\n                                              scale={traceInfo.colorScale}\n                                              name={traceInfo.name}\n                                              selectedValueCounts={this.props.selectedValueCounts}/> :\n                    <CategoricalLegend legendVisibility={this.props.legendVisibility}\n                                       handleClick={this.props.handleLegendClick} name={traceInfo.name}\n                                       scale={traceInfo.colorScale}\n                                       selectedValueCounts={this.props.selectedValueCounts}/>}</div>);\n        });\n    }\n\n    render() {\n        return this.getPlots();\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        data: state.embeddingData,\n        config: state.plotConfig,\n        legendVisibility: state.legendVisibility,\n        selectedValueCounts: state.selectedValueCounts\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLegendClick: (e) => {\n            dispatch(handleLegendClick(e));\n        },\n        onSelect: (e) => {\n            dispatch(handleSelectedPoints(e));\n        },\n        onDeselect: () => {\n            dispatch(handleSelectedPoints(null));\n        },\n        onZoom: () => {\n\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbeddingChartPlotly));\n\n","import Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from '@material-ui/core/styles';\nimport {emphasize} from '@material-ui/core/styles/colorManipulator';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncSelect from 'react-select/async';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    input: {\n        display: 'flex',\n        padding: 0,\n        maxWidth: '220px',\n        height: '100%'\n    },\n    valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    chip: {\n        margin: `${theme.spacing(1) / 2}px ${theme.spacing(1) / 4}px`,\n    },\n    chipFocused: {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n            0.08,\n        ),\n    },\n    noOptionsMessage: {\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\n    },\n    singleValue: {\n        fontSize: 16,\n    },\n    placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16,\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    divider: {\n        height: theme.spacing(1) * 2,\n    },\n});\n\nconst groupStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n};\n\nconst formatGroupLabel = data => (\n    <div style={groupStyles}>\n        <span>{data.label}</span>\n    </div>\n);\n\nfunction NoOptionsMessage(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.noOptionsMessage}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction inputComponent({inputRef, ...props}) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: props.selectProps.classes.input,\n                    inputRef: props.innerRef,\n                    children: props.children,\n                    ...props.innerProps,\n                },\n            }}\n            {...props.selectProps.textFieldProps}\n        />\n    );\n}\n\nfunction Option(props) {\n    return (\n        <MenuItem\n            buttonRef={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.placeholder}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction SingleValue(props) {\n    return (\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={classNames(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused,\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props) {\n    return (\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n            {props.children}\n        </Paper>\n    );\n}\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer,\n};\n\nclass Autocomplete extends React.Component {\n    loadOptions = (inputValue, callback) => {\n        return callback(this.filterOptions(inputValue));\n    };\n\n    noOptionsMessage = () => {\n        return 'No matches';\n    };\n\n    onChange = (value) => {\n        if (this.props.isMulti) {\n            this.props.onChange(value == null || value.length === 0 ? null : value.map(item => item.value));\n        } else {\n            // [value[value.length - 1]]\n            this.props.onChange(value);\n        }\n    };\n\n    filterOptions = (inputValue) => {\n        if (inputValue) {\n            inputValue = inputValue.toLowerCase();\n            let limit = inputValue.length === 1 ? 3 : (inputValue.length === 2 ? 10 : 20);\n            let nmatches = 0;\n            let results = [];\n            for (let i = 0, ngroups = this.props.options.length; i < ngroups; i++) {\n                let option = this.props.options[i];\n                let filteredOption = {label: option.label, options: []}\n                results.push(filteredOption);\n                for (let j = 0, n = option.options.length; j < n; j++) {\n                    let choice = option.options[j];\n                    if (choice.value.toLowerCase().startsWith(inputValue)) {\n                        nmatches++;\n                        filteredOption.options.push(choice);\n                        if (nmatches === limit) {\n                            return results;\n                        }\n                    }\n                }\n            }\n            return results;\n        }\n        return [];\n    };\n\n    render() {\n        const {classes, theme} = this.props;\n\n        const selectStyles = {\n            input: base => ({\n                ...base,\n                color: theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit',\n                },\n            }),\n        };\n\n        return (\n            <div className={classes.root}>\n                <NoSsr>\n                    <AsyncSelect\n                        noOptionsMessage={this.noOptionsMessage}\n                        cacheOptions={false}\n                        placeholder={''}\n                        loadOptions={this.loadOptions}\n                        classes={classes}\n                        styles={selectStyles}\n                        textFieldProps={{\n                            label: this.props.label,\n                            helperText: this.props.helperText,\n                            InputLabelProps: {\n                                shrink: true,\n                            },\n                        }}\n                        formatGroupLabel={formatGroupLabel}\n                        components={components}\n                        onChange={this.onChange}\n                        value={this.props.value}\n                        isMulti={this.props.isMulti}\n                        defaultOptions={this.props.defaultOptions}\n                    />\n                </NoSsr>\n            </div>\n        );\n    }\n}\n\nAutocomplete.propTypes = {\n    isMulti: PropTypes.bool.isRequired,\n    defaultOptions: PropTypes.array,\n    label: PropTypes.string.isRequired,\n    helperText: PropTypes.string,\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    options: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(Autocomplete);\n\n","import Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {scaleSequential} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setInterpolator} from './actions';\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport {getInterpolator, interpolators} from \"./PlotUtil\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n    select: {\n        minWidth: 200,\n    },\n});\n\n\nclass ColorSchemeSelector extends React.PureComponent {\n    handleInterpolatorChange = (event) => {\n        let name = event.target.value;\n        this.props.handleInterpolator({name: name, value: getInterpolator(name)});\n    };\n\n    getScale(name) {\n        return scaleSequential(scaleChromatic[name]).domain([0, 1]);\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Select\n                input={<Input id=\"color-scheme\"/>}\n                className={classes.select}\n                onChange={this.handleInterpolatorChange}\n                value={this.props.interpolator.name}\n                multiple={false}>\n                <MenuItem key=\"Diverging\" value=\"Diverging\" divider disabled>\n                    Diverging\n                </MenuItem>\n                {interpolators['Diverging'].map(item => (<MenuItem value={item} key={item}>\n                    <ColorSchemeLegend width={200}\n                                       label={false} height={24}\n                                       scale={this.getScale(item)}/>\n\n                </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Single Hue)\" value=\"Sequential (Single Hue)\" divider disabled>\n                    Sequential (Single Hue)\n                </MenuItem>\n                {interpolators['Sequential (Single Hue)'].map(item => (<MenuItem value={item} key={item}>\n                    <ColorSchemeLegend width={200}\n                                       label={false} height={20}\n                                       scale={this.getScale(item)}/>\n                </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Multi-Hue)\" value=\"Sequential (Multi-Hue)\" divider disabled>\n                    Sequential (Multi-Hue)\n                </MenuItem>\n                {interpolators['Sequential (Multi-Hue)'].map(item => (<MenuItem value={item} key={item}>\n                    <ColorSchemeLegend width={200}\n                                       label={false} height={20}\n                                       scale={this.getScale(item)}/>\n                </MenuItem>))}\n\n                <MenuItem key=\"Cyclical\" value=\"Cyclical\" divider disabled>\n                    Cyclical\n                </MenuItem>\n                {interpolators['Cyclical'].map(item => (<MenuItem value={item} key={item}>\n                    <ColorSchemeLegend width={200}\n                                       label={false} height={20}\n                                       scale={this.getScale(item)}/>\n                </MenuItem>))}\n\n\n            </Select>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        interpolator: state.interpolator,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleInterpolator: value => {\n            dispatch(setInterpolator(value));\n        },\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(ColorSchemeSelector));\n","import {Switch} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    setBinSummary,\n    setBinValues,\n    setFeatures,\n    setMarkerOpacity,\n    setMarkerOpacityUI,\n    setMarkerSize,\n    setMarkerSizeUI,\n    setNumberOfBins,\n    setNumberOfBinsUI,\n    setSelectedEmbedding,\n    setUnselectedMarkerOpacity,\n    setUnselectedMarkerOpacityUI,\n    setUnselectedMarkerSize,\n    setUnselectedMarkerSizeUI\n} from './actions';\n\nimport Autocomplete from './Autocomplete';\nimport ColorSchemeSelector from './ColorSchemeSelector';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n    select: {\n        minWidth: 200,\n    },\n});\n\nclass EmbedForm extends React.PureComponent {\n\n    onMarkerSizeChange = (event) => {\n        this.props.handleMarkerSizeUI(event.target.value);\n    };\n\n    onMarkerSizeKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let markerSize = parseFloat(event.target.value);\n            if (markerSize > 0) {\n                this.props.handleMarkerSize(markerSize);\n            }\n        }\n    };\n\n    onUnselectedMarkerSizeChange = (event) => {\n        this.props.handleUnselectedMarkerSizeUI(event.target.value);\n    };\n\n    onUnselectedMarkerSizeKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let markerSize = parseFloat(event.target.value);\n            if (markerSize > 0) {\n                this.props.handleUnselectedMarkerSize(markerSize);\n            }\n        }\n    };\n\n    onMarkerOpacityChange = (event) => {\n        this.props.handleMarkerOpacityUI(event.target.value);\n    };\n\n    onMarkerOpacityKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let opacity = parseFloat(event.target.value);\n            if (opacity > 0 && opacity <= 1) {\n                this.props.handleMarkerOpacity(opacity);\n            }\n        }\n    };\n\n    onUnselectedMarkerOpacityChange = (event) => {\n        this.props.handleUnselectedMarkerOpacityUI(event.target.value);\n    };\n\n    onUnselectedMarkerOpacityKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let opacity = parseFloat(event.target.value);\n            if (opacity > 0 && opacity <= 1) {\n                this.props.handleUnselectedMarkerOpacity(opacity);\n            }\n        }\n    };\n\n    onNumberOfBinsChange = (event) => {\n        this.props.handleNumberOfBinsUI(event.target.value);\n    };\n\n    onNumberOfBinsKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let numberOfBins = parseInt(event.target.value);\n            if (numberOfBins > 0) {\n                this.props.handleNumberOfBins(numberOfBins);\n            }\n        }\n    };\n\n    onBinSummaryChange = (event) => {\n        this.props.handleBinSummary(event.target.value);\n    };\n\n    handleBinValuesChange = (event) => {\n        this.props.handleBinValues(event.target.checked);\n    };\n\n    handleViewChange = (event) => {\n        this.props.handleViewName(event.target.value);\n    };\n\n\n    render() {\n        const {classes, unselectedMarkerSize, selectedFeatures, selectedGroupBy, selectedEmbeddings, numberOfBins, markerSize, markerOpacity, unselectedMarkerOpacity, binValues, binSummary, dataset} = this.props;\n        const features = dataset == null ? [] : dataset.features;\n        const availableEmbeddings = dataset == null ? [] : dataset.embeddings;\n        const obsCat = dataset == null ? [] : dataset.obsCat;\n        const obs = dataset == null ? [] : dataset.obs;\n\n\n        const summaryOptions = [\n            {value: 'min', label: 'Minimum'},\n            {value: 'max', label: 'Maximum'},\n            {value: 'mean', label: 'Mean'},\n            {value: 'sum', label: 'Sum'}];\n        let featureValue = selectedFeatures.concat(selectedGroupBy);\n        featureValue = featureValue.map(item => {\n            return {label: item, value: item};\n        });\n        let metadataOptions = obs.map(item => {\n            return {label: item, value: item};\n        });\n        metadataOptions = metadataOptions.concat(obsCat.map(item => {\n            return {label: item, value: item, categorical: true};\n        }));\n        metadataOptions.sort((a, b) => {\n            a = a.label.toLowerCase();\n            b = b.label.toLowerCase();\n            return a < b ? -1 : (a == b ? 0 : 1);\n        });\n\n        let allOptions = [{label: 'Annotations', options: metadataOptions}, {\n            label: 'Variables',\n            options: features.map(item => {\n                return {label: item, value: item};\n            })\n        }];\n        let defaultOptions = [{\n            label: 'Annotations', options: metadataOptions\n        }, {\n            label: 'Variables',\n            options: [{isDisabled: true, label: 'Type to search', value: ''}]\n        }];\n        return (\n            <div className={classes.root}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"view\">Embedding</InputLabel>\n                    <Select\n                        className={classes.select}\n                        input={<Input id=\"view\"/>}\n                        onChange={this.handleViewChange}\n                        value={selectedEmbeddings.length === 0 ? '' : selectedEmbeddings[0]}\n                        multiple={false}>\n                        {availableEmbeddings.map(view => (\n                            <MenuItem key={view.name} value={view.name}>\n                                <ListItemText primary={view.name}/>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n\n                <FormControl className={classes.formControl}>\n                    <Autocomplete label=\"Features\" options={allOptions}\n                                  defaultOptions={defaultOptions} value={featureValue}\n                                  onChange={this.props.handleFeatures}\n                                  isMulti={true}/>\n                </FormControl>\n\n                <TextField type=\"number\" step=\"2\" min=\"0.1\" max=\"30\" onKeyPress={this.onMarkerSizeKeyPress}\n                           onChange={this.onMarkerSizeChange} label=\"Marker Size\"\n                           className={classes.formControl} value={markerSize}/>\n                <TextField step=\"0.1\" type=\"number\" min=\"0.01\" max=\"1\" onKeyPress={this.onMarkerOpacityKeyPress}\n                           onChange={this.onMarkerOpacityChange} label=\"Marker Opacity\"\n                           className={classes.formControl} value={markerOpacity}/>\n\n\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={binValues}\n                            value={'binPlot'}\n                            onChange={this.handleBinValuesChange}\n                        />\n                    }\n                    label=\"Bin Plot\"\n                />\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"color-scheme\">Color Scheme</InputLabel>\n                    <ColorSchemeSelector/>\n                </FormControl>\n                {binValues &&\n                <TextField max=\"1000\" min=\"20\" step=\"100\" onKeyPress={this.onNumberOfBinsKeyPress}\n                           value={numberOfBins}\n                           onChange={this.onNumberOfBinsChange} label=\"# Bins Per Axis\"\n                           className={classes.formControl}/>}\n\n                {binValues && <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"summary\">Bin Summary</InputLabel>\n                    <Select\n                        className={classes.select}\n                        input={<Input id=\"summary\"/>}\n                        onChange={this.onBinSummaryChange}\n                        value={binSummary}\n                    >\n                        {summaryOptions.map(c => (\n                            <MenuItem key={c.value} value={c.value}>\n                                <ListItemText primary={c.label}/>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>}\n\n                <TextField type=\"number\" step=\"2\" min=\"0.1\" max=\"30\" onKeyPress={this.onUnselectedMarkerSizeKeyPress}\n                           onChange={this.onUnselectedMarkerSizeChange} label=\"Unselected Marker Size\"\n                           className={classes.formControl} value={unselectedMarkerSize}/>\n                <TextField step=\"0.1\" type=\"number\" min=\"0.01\" max=\"1\"\n                           onKeyPress={this.onUnselectedMarkerOpacityKeyPress}\n                           onChange={this.onUnselectedMarkerOpacityChange} label=\"Unselected Marker Opacity\"\n                           className={classes.formControl} value={unselectedMarkerOpacity}/>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedFeatures: state.features,\n        selectedGroupBy: state.groupBy,\n        selectedEmbeddings: state.embeddings,\n        numberOfBins: state.numberOfBinsUI,\n        markerSize: state.markerSizeUI,\n        unselectedMarkerSize: state.unselectedMarkerSizeUI,\n        markerOpacity: state.markerOpacityUI,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacityUI,\n        binValues: state.binValues,\n        binSummary: state.binSummary,\n        dataset: state.dataset\n    };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleNumberOfBins: value => {\n            dispatch(setNumberOfBins(value));\n        },\n        handleNumberOfBinsUI: value => {\n            dispatch(setNumberOfBinsUI(value));\n        },\n        handleMarkerSize: value => {\n            dispatch(setMarkerSize(value));\n        },\n        handleMarkerSizeUI: value => {\n            dispatch(setMarkerSizeUI(value));\n        },\n        handleUnselectedMarkerSize: value => {\n            dispatch(setUnselectedMarkerSize(value));\n        },\n        handleUnselectedMarkerSizeUI: value => {\n            dispatch(setUnselectedMarkerSizeUI(value));\n        },\n        handleMarkerOpacity: value => {\n            dispatch(setMarkerOpacity(value));\n        },\n        handleMarkerOpacityUI: value => {\n            dispatch(setMarkerOpacityUI(value));\n        },\n        handleUnselectedMarkerOpacity: value => {\n            dispatch(setUnselectedMarkerOpacity(value));\n        },\n        handleUnselectedMarkerOpacityUI: value => {\n            dispatch(setUnselectedMarkerOpacityUI(value));\n        },\n        handleBinSummary: value => {\n            dispatch(setBinSummary(value));\n        },\n        handleBinValues: value => {\n            dispatch(setBinValues(value));\n        },\n        handleViewName: value => {\n            dispatch(setSelectedEmbedding(value == null ? [] : [value]));\n        },\n        handleFeatures: value => {\n            dispatch(setFeatures(value == null ? [] : value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbedForm));\n\n\n","import {color} from 'd3-color';\nimport {scaleLinear, scaleSequential} from 'd3-scale';\nimport {combineReducers} from 'redux';\nimport {\n    ADD_DATASET,\n    DELETE_DATASET,\n    RESTORE_VIEW,\n    SET_BIN_SUMMARY,\n    SET_BIN_VALUES,\n    SET_DATASET,\n    SET_DATASET_CHOICES,\n    SET_DIALOG,\n    SET_DOT_PLOT_DATA,\n    SET_EMAIL,\n    SET_EMBEDDING_DATA,\n    SET_FEATURES,\n    SET_GROUP_BY,\n    SET_INTERPOLATOR,\n    SET_LEGEND_VISIBILITY,\n    SET_LOADING,\n    SET_LOADING_APP,\n    SET_MARKER_OPACITY,\n    SET_MARKER_OPACITY_UI,\n    SET_MARKER_SIZE,\n    SET_MARKER_SIZE_UI,\n    SET_MESSAGE,\n    SET_NUMBER_OF_BINS,\n    SET_NUMBER_OF_BINS_UI,\n    SET_SELECTED_EMBEDDING,\n    SET_SELECTED_VALUE_COUNTS,\n    SET_SERVER_INFO,\n    SET_UNSELECTED_MARKER_OPACITY,\n    SET_UNSELECTED_MARKER_OPACITY_UI,\n    SET_UNSELECTED_MARKER_SIZE,\n    SET_UNSELECTED_MARKER_SIZE_UI,\n    SET_USER,\n    UPDATE_DATASET,\n} from '../actions';\nimport PlotUtil, {getInterpolator} from '../PlotUtil';\n\nexport const DEFAULT_MARKER_SIZE = 5;\nexport const DEFAULT_MARKER_OPACITY = 1;\nexport const DEFAULT_UNSELECTED_MARKER_OPACITY = 0.1;\nexport const DEFAULT_BIN_SUMMARY = 'mean';\nexport const DEFAULT_NUMBER_BINS = 500;\nexport const DEFAULT_INTERPOLATOR = 'Viridis';\nconst DEFAULT_INTERPOLATOR_OBJ = {name: DEFAULT_INTERPOLATOR, value: getInterpolator(DEFAULT_INTERPOLATOR)};\n\nfunction features(state = [], action) {\n    switch (action.type) {\n        case SET_FEATURES:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.features || [];\n        default:\n            return state;\n    }\n}\n\nfunction groupBy(state = [], action) {\n    switch (action.type) {\n        case SET_GROUP_BY:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.groupBy || [];\n        default:\n            return state;\n    }\n}\n\n// set the selected embeddings\nfunction embeddings(state = [], action) {\n    switch (action.type) {\n        case SET_SELECTED_EMBEDDING:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddings != null ? action.payload.embeddings : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction binSummary(state = DEFAULT_BIN_SUMMARY, action) {\n    switch (action.type) {\n        case SET_BIN_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_BIN_SUMMARY;\n        case RESTORE_VIEW:\n            return action.payload.binSummary != null ? action.payload.binSummary : state;\n        default:\n            return state;\n    }\n}\n\nfunction dataset(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction binValues(state = false, action) {\n    switch (action.type) {\n        case SET_BIN_VALUES:\n            return action.payload;\n        case SET_DATASET:\n            return false;\n        case RESTORE_VIEW:\n            return action.payload.binValues != null ? action.payload.binValues : state;\n        default:\n            return state;\n    }\n}\n\nfunction markerSize(state = DEFAULT_MARKER_SIZE, action) {\n    switch (action.type) {\n        case SET_MARKER_SIZE:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_SIZE;\n        case RESTORE_VIEW:\n            return action.payload.markerSize != null ? action.payload.markerSize : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerSize(state = DEFAULT_MARKER_SIZE, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_SIZE:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_SIZE;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerSize != null ? action.payload.unselectedMarkerSize : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction numberOfBins(state = DEFAULT_NUMBER_BINS, action) {\n    switch (action.type) {\n        case SET_NUMBER_OF_BINS:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_NUMBER_BINS;\n        case RESTORE_VIEW:\n            return action.payload.numberOfBins != null ? action.payload.numberOfBins : state;\n        default:\n            return state;\n    }\n}\n\nfunction numberOfBinsUI(state = DEFAULT_NUMBER_BINS, action) {\n    switch (action.type) {\n        case SET_NUMBER_OF_BINS:\n        case SET_NUMBER_OF_BINS_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_NUMBER_BINS;\n        case RESTORE_VIEW:\n            return action.payload.numberOfBins != null ? action.payload.numberOfBins : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerSizeUI(state = null, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_SIZE :\n        case SET_UNSELECTED_MARKER_SIZE_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_SIZE;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerSize != null ? action.payload.unselectedMarkerSize : state;\n        default:\n            return state;\n    }\n}\n\nfunction markerSizeUI(state = null, action) {\n    switch (action.type) {\n        case SET_MARKER_SIZE:\n        case SET_MARKER_SIZE_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_SIZE;\n        case RESTORE_VIEW:\n            return action.payload.markerSize != null ? action.payload.markerSize : state;\n        default:\n            return state;\n    }\n}\n\nfunction markerOpacity(state = DEFAULT_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacity(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction markerOpacityUI(state = 1, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n        case SET_MARKER_OPACITY_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacityUI(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n        case SET_UNSELECTED_MARKER_OPACITY_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction message(state = null, action) {\n    switch (action.type) {\n        case SET_MESSAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction email(state = null, action) {\n    switch (action.type) {\n        case SET_EMAIL:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction user(state = {}, action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction selectedValueCounts(state = {}, action) {\n    switch (action.type) {\n        case SET_SELECTED_VALUE_COUNTS:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nfunction serverInfo(state = {}, action) {\n    switch (action.type) {\n        case SET_SERVER_INFO:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction loadingApp(state = true, action) {\n    switch (action.type) {\n        case SET_LOADING_APP:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction datasetChoices(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET_CHOICES:\n            return action.payload;\n        case SET_EMAIL:\n            if (action.payload == null) {\n                return [];\n            }\n            return state;\n        case ADD_DATASET:\n            state = state.concat([action.payload]);\n            state.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\n            return state;\n        case UPDATE_DATASET:\n        case DELETE_DATASET:\n            let index = -1;\n            for (let i = 0; i < state.length; i++) {\n                if (state[i].id === action.payload.id) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                if (action.type === UPDATE_DATASET) {\n                    state[index] = action.payload;\n                } else {\n                    state.splice(index, 1);\n                }\n                return state.slice();\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\nfunction dialog(state = null, action) {\n    switch (action.type) {\n        case SET_DIALOG:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction dotPlotData(state = null, action) {\n    switch (action.type) {\n        case SET_DOT_PLOT_DATA:\n            return action.payload;\n        case SET_DATASET:\n            return null;\n        default:\n            return state;\n    }\n}\n\nfunction legendVisibility(state = {}, action) {\n    switch (action.type) {\n        case SET_LEGEND_VISIBILITY:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction embeddingData(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_DATA :\n            return action.payload;\n        case SET_MARKER_SIZE:\n            state.forEach(item => {\n                item.data.forEach(trace => {\n                    trace.marker.size = action.payload;\n                });\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_SELECTED_VALUE_COUNTS:\n            let indices = action.payload.indices;\n            state.forEach(item => {\n\n                item.data.forEach(trace => {\n                    trace.selectedpoints = indices;\n                });\n\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_INTERPOLATOR:\n            // update colors for existing traces\n            // TODO custom categorical colors\n            let rgbScale = scaleLinear().domain([0, 255]).range([0, 1]);\n            state.forEach(item => {\n                if (item.continuous) {\n                    let colorScale = scaleSequential(action.payload.value).domain(item.colorScale.domain());\n                    item.data.forEach(trace => {\n                        let colors = [];\n                        for (let i = 0, n = trace.values.length; i < n; i++) {\n                            let rgb = color(colorScale(trace.values[i]));\n                            colors.push([rgbScale(rgb.r), rgbScale(rgb.g), rgbScale(rgb.b)]);\n                        }\n                        trace.marker.color = colors;\n                    });\n                    item.colorScale = colorScale;\n                }\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_MARKER_OPACITY:\n            state.forEach(item => {\n                item.data.forEach(trace => {\n                    trace.marker.opacity = action.payload;\n                });\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_UNSELECTED_MARKER_OPACITY:\n            state.forEach(item => {\n                item.data.forEach(trace => {\n                    trace.unselected.marker.opacity = action.payload;\n                });\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_UNSELECTED_MARKER_SIZE:\n            state.forEach(item => {\n                item.data.forEach(trace => {\n                    trace.unselected.marker.size = action.payload;\n                });\n                item.data = item.data.slice();\n            });\n            return state.slice();\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nfunction loading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction plotConfig(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return PlotUtil.createPlotConfig();\n        default:\n            return state;\n    }\n}\n\nfunction interpolator(state = DEFAULT_INTERPOLATOR_OBJ, action) {\n    switch (action.type) {\n        case SET_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.colorScheme != null ? action.payload.colorScheme : state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    binSummary,\n    binValues,\n    dataset,\n    datasetChoices,\n    dialog,\n    dotPlotData,\n    email,\n    embeddingData,\n    embeddings,\n    features,\n    groupBy,\n    interpolator,\n    legendVisibility,\n    loading,\n    loadingApp,\n    markerOpacity,\n    markerOpacityUI,\n    markerSize,\n    markerSizeUI,\n    message,\n    numberOfBins,\n    numberOfBinsUI,\n    plotConfig,\n    selectedValueCounts,\n    serverInfo,\n    unselectedMarkerOpacity,\n    unselectedMarkerSize,\n    unselectedMarkerSizeUI,\n    unselectedMarkerOpacityUI,\n    user\n});\n","import {IconButton, Menu, Snackbar, Tooltip} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Drawer from '@material-ui/core/Drawer';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport Select from '@material-ui/core/Select';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {format} from 'd3-format';\nimport React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    login,\n    logout,\n    setDataset,\n    setDialog,\n    setMessage,\n} from './actions';\nimport DeleteDatasetDialog from './DeleteDatasetDialog';\nimport DotPlot from './DotPlot';\nimport EditDatasetDialog from './EditDatasetDialog';\nimport EmbeddingChartPlotly from './EmbeddingChartPlotly';\nimport EmbedForm from './EmbedForm';\nimport {\n    DEFAULT_BIN_SUMMARY,\n    DEFAULT_INTERPOLATOR,\n    DEFAULT_MARKER_OPACITY,\n    DEFAULT_MARKER_SIZE,\n    DEFAULT_NUMBER_BINS\n} from \"./reducers\";\n\nconst intFormat = format(',');\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        paddingTop: theme.spacing(6.5),\n        paddingLeft: theme.spacing(1)\n    },\n});\n\n\nclass App extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMenuOpen: false,\n            linkMenuOpen: false,\n            userMenuAnchorEl: null,\n            linkMenuAnchorEl: null,\n            linkText: null,\n        };\n        this.linkRef = React.createRef();\n\n    }\n\n    handleUserMenuClose = () => {\n        this.setState({userMenuOpen: false});\n    };\n\n    handleMessageClose = () => {\n        this.props.setMessage(null);\n    };\n    handleUserMenuOpen = (event) => {\n        this.setState({userMenuOpen: true, userMenuAnchorEl: event.currentTarget});\n    };\n\n    handleLinkMenuClose = (event) => {\n        this.setState({linkMenuOpen: false, linkMenuAnchorEl: null});\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.linkMenuOpen) {\n            window.requestAnimationFrame(() => {\n                this.linkRef.current.focus();\n                this.linkRef.current.select();\n            });\n        }\n    }\n\n    copyLink = () => {\n        this.linkRef.current.focus();\n        this.linkRef.current.select();\n        document.execCommand('copy');\n        this.props.setMessage('Link copied');\n    };\n\n    handleLinkMenuOpen = (event) => {\n        let linkText = window.location.protocol + '//' + window.location.host;\n\n\n        let json = {\n            dataset: this.props.dataset.id,\n            features: this.props.features,\n            groupBy: this.props.groupBy,\n            embedding: this.props.embedding\n        };\n        if (this.props.markerSize !== DEFAULT_MARKER_SIZE) {\n            json.markerSize = this.props.markerSize;\n        }\n        if (this.props.markerOpacity !== DEFAULT_MARKER_OPACITY) {\n            json.markerOpacity = this.props.markerOpacity;\n        }\n        if (this.props.binValues) {\n            json.binValues = true;\n            if (this.props.binSummary !== DEFAULT_BIN_SUMMARY) {\n                json.binSummary = this.props.binSummary;\n            }\n            if (this.props.numberOfBins !== DEFAULT_NUMBER_BINS) {\n                json.numberOfBins = this.props.numberOfBins;\n            }\n        }\n        if (this.props.view3d) {\n            json['3d'] = true;\n        }\n\n        if (this.props.interpolator.name !== DEFAULT_INTERPOLATOR) {\n            json.colorScheme = this.props.interpolator.name;\n        }\n\n        linkText += '?q=' + JSON.stringify(json);\n        this.setState({linkMenuOpen: true, linkMenuAnchorEl: event.currentTarget, linkText: linkText});\n\n    };\n\n    handleLogout = () => {\n        this.setState({userMenuOpen: false});\n        this.props.handleLogout();\n    };\n\n    handleDataset = (event) => {\n        if (event.target.value === 'importDataset') {\n            this.props.handleDialog(IMPORT_DATASET_DIALOG);\n        } else {\n            this.props.handleDataset(event.target.value);\n        }\n    };\n    handleSettings = (event) => {\n        this.props.handleDialog(EDIT_DATASET_DIALOG);\n    };\n\n    handleDelete = (event) => {\n        this.props.handleDialog(DELETE_DATASET_DIALOG);\n    };\n\n    render() {\n\n        // tabs: 1. embedding, 2. grouped table with kde per feature, dotplot\n        // need to add filter, selection\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n\n                {(this.props.dialog === EDIT_DATASET_DIALOG || this.props.dialog === IMPORT_DATASET_DIALOG) &&\n                <EditDatasetDialog/>}\n                {this.props.dialog === DELETE_DATASET_DIALOG && <DeleteDatasetDialog/>}\n                <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\n                    <Toolbar variant=\"dense\">\n                        <div>\n                            <CloudIcon style={{verticalAlign: 'bottom'}} fontSize={'large'}/>\n                            <h3\n                                style={{display: 'inline', marginRight: 20}}>Cirrocumulus</h3>\n                            {this.props.loadingApp && <span>Loading...</span>}\n                            {this.props.email != null &&\n                            <Select\n                                disableUnderline={true}\n                                displayEmpty={true}\n                                value={this.props.dataset == null ? '' : this.props.dataset.id}\n                                onChange={this.handleDataset}\n                                inputProps={{\n                                    name: 'dataset',\n                                    id: 'dataset-id',\n                                }}\n                            > {this.props.datasetChoices.length > 0 && <MenuItem key=\"\" value=\"\" disabled>\n                                Choose a dataset\n                            </MenuItem>}\n                                {this.props.datasetChoices.map(dataset => <MenuItem\n                                    key={dataset.id} value={dataset.id}>{dataset.name}</MenuItem>)}\n\n                                {this.props.user.importer && this.props.datasetChoices.length > 0 && <hr/>}\n                                {this.props.user.importer && <MenuItem key=\"importDataset\" value=\"importDataset\">\n                                    Import...\n                                </MenuItem>}\n                            </Select>}\n                            <div style={{display: 'inline-block', marginLeft: '10px'}}>\n                                {this.props.dataset != null && this.props.dataset.nObs > 0 && this.props.selectedValueCounts.count > 0\n                                && intFormat(this.props.selectedValueCounts.count) + ' / ' + intFormat(this.props.dataset.nObs) + ' cells'}\n                                {this.props.dataset != null && !(this.props.selectedValueCounts.count > 0) && this.props.dataset.nObs > 0 && intFormat(this.props.dataset.nObs) + ' cells'}\n                            </div>\n                        </div>\n                        <div style={{marginLeft: 'auto'}}>\n                            {this.props.dataset != null &&\n                            <Tooltip title=\"Link\"><IconButton\n                                aria-owns={this.state.linkMenuOpen ? 'link-popper' : undefined}\n                                aria-haspopup=\"true\" onClick={this.handleLinkMenuOpen} aria-label=\"Link\">\n                                <LinkIcon/>\n                            </IconButton></Tooltip>}\n\n                            {this.props.dataset !== null && this.props.dataset.owner &&\n                            <Tooltip title=\"Edit\"><IconButton onClick={this.handleSettings} aria-label=\"Edit\">\n                                <SettingsIcon/>\n                            </IconButton></Tooltip>}\n\n                            {this.props.dataset !== null && this.props.dataset.owner &&\n                            <Tooltip title=\"Delete\"><IconButton onClick={this.handleDelete} aria-label=\"Delete\">\n                                <DeleteIcon/>\n                            </IconButton></Tooltip>}\n\n                            {this.props.dataset != null && <Popover\n                                id=\"link-popper\"\n                                open={this.state.linkMenuOpen}\n                                anchorEl={this.state.linkMenuAnchorEl}\n                                onClose={this.handleLinkMenuClose}\n\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'right',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                            >\n                                <div style={{padding: 10}}>\n                                    <h4>Copy link to share your current view</h4>\n                                    <Button variant=\"outlined\" onClick={this.copyLink}>\n                                        Copy\n                                    </Button> <Input autoFocus={true} inputRef={this.linkRef} readOnly={true}\n                                                     value={this.state.linkText}></Input>\n                                </div>\n                            </Popover>\n                            }\n                            {this.props.email != null &&\n                            <Tooltip title={this.props.email}>\n                                <IconButton style={{marginLeft: 50}} aria-label=\"Menu\" aria-haspopup=\"true\"\n                                            onClick={this.handleUserMenuOpen}>\n                                    <AccountCircle/>\n                                </IconButton>\n                            </Tooltip>}\n                            {this.props.email != null &&\n                            <Menu id=\"menu-user\"\n                                  anchorEl={this.state.userMenuAnchorEl}\n                                  anchorOrigin={{\n                                      vertical: 'top',\n                                      horizontal: 'right',\n                                  }}\n\n                                  transformOrigin={{\n                                      vertical: 'top',\n                                      horizontal: 'right',\n                                  }} open={this.state.userMenuOpen}\n                                  onClose={this.handleUserMenuClose}>\n                                <MenuItem onClick={this.handleLogout}>Sign Out</MenuItem>\n                            </Menu>}\n\n\n                            {!this.props.loadingApp && this.props.email == null &&\n                            <Button style={{whiteSpace: 'nowrap'}} variant=\"outlined\" color=\"primary\"\n                                    onClick={this.props.handleLogin}>Sign In</Button>}\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n                    {this.props.dataset != null && <EmbedForm key={this.props.dataset.id}/>}\n                </Drawer>\n                <div/>\n                <main className={classes.content}>\n\n                    {this.props.dataset != null && <EmbeddingChartPlotly/>}\n                    {this.props.dataset != null && <DotPlot/>}\n                </main>\n\n\n                {this.props.loading && <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    ContentProps={{\n                        'aria-describedby': 'loading-id',\n                    }}\n                    open={true}\n                    message={<span id=\"loading-id\"><CircularProgress size={20}/> Loading...</span>}\n                />}\n\n                {this.props.message != null && <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    onClose={this.handleMessageClose}\n                    open={true}\n                    autoHideDuration={6000}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            onClick={this.handleMessageClose}\n                        >\n                            <CloseIcon/>\n                        </IconButton>,\n                    ]}\n                    message={<span id=\"message-id\">{this.props.message instanceof Error\n                        ? this.props.message.message\n                        : this.props.message}</span>}\n                />}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        message: state.message,\n        loadingApp: state.loadingApp,\n        loading: state.loading,\n        dialog: state.dialog,\n        email: state.email,\n        dataset: state.dataset,\n        datasetChoices: state.datasetChoices,\n        selectedValueCounts: state.selectedValueCounts,\n        features: state.features,\n        groupBy: state.groupBy,\n        markerSize: state.markerSize,\n        markerOpacity: state.markerOpacity,\n        embedding: state.embedding,\n        view3d: state.view3d,\n        numberOfBins: state.numberOfBins,\n        binSummary: state.binSummary,\n        binValues: state.binValues,\n        interpolator: state.interpolator,\n        selectedpoints: state.selectedpoints,\n        user: state.user\n\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleLogin: () => {\n            dispatch(login());\n        },\n        handleLogout: () => {\n            dispatch(logout());\n        },\n        handleDataset: value => {\n            dispatch(setDataset(value));\n        },\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        },\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(App));\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {initGapi} from './actions';\nimport App from './App';\nimport rootReducer from './reducers';\nimport {ThemeProvider} from '@material-ui/styles';\nimport {createMuiTheme} from '@material-ui/core/styles';\n// import * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme(\n    {\n        \"palette\": {\n            \"type\": \"light\"\n        }\n    }\n);\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n    ),\n);\n\nfunction main() {\n    render(\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </Provider>,\n        document.getElementById('root'),\n    );\n}\n\n// if (module.hot) {\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n//   }\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./App', main);\n//   }\n// }\nstore.dispatch(initGapi());\nmain();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}