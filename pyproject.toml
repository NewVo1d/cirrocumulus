[build-system]
requires = ['hatchling>=0.23.0', 'hatch-vcs']
build-backend = 'hatchling.build'


[project]
name = 'cirrocumulus'
description = 'Interactive visualization tool for large-scale single-cell genomics data'
readme = 'README.rst'
authors = [
    { name = 'Joshua Gould', email = 'cirrocumulus@googlegroups.com' },
]
urls.Source = 'https://github.com/klarman-cell-observatory/cirrocumulus'
urls.Documentation = "https://cirrocumulus.readthedocs.io/"

license = { file = 'LICENSE' }
dynamic = ['version']
classifiers = [
    "License :: OSI Approved :: BSD License",
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: 3',
    'Topic :: Scientific/Engineering :: Bio-Informatics',
    'Topic :: Scientific/Engineering :: Visualization'
]

requires-python = '>=3.7'
dependencies = [
    "anndata",
    "CacheControl",
    "flask",
    "flask-compress",
    "fsspec",
    "gunicorn",
    "numpy",
    "pandas",
    "pyarrow",
    "pymongo",
    "scipy",
    "zarr"
]

[project.optional-dependencies]
test = [
    'pytest',
    'scanpy',
    'mongomock',
]
dev = ['pre-commit', 'isort', 'black']

[tool.hatch.version]
source = 'vcs'

[tool.black]
line-length = 100
include = '\.pyi?$'

[tool.docformatter]
include = '\.pyi?$'

[tool.isort]
profile = 'black'
length_sort_straight = true
line_length = 100
lines_after_imports = 2

[tool.flake8]
max-line-length = 100
include = '\.pyi?$'
ignore = [
    'E731', # Do not assign a lambda expression, use a def
    'E203', # whitespace before ':'
    'W503', # line break before binary operator ==
    'E501', # Line too long (82 > 79 characters)
    'E722', # Do not use bare except, specify exception instead
]

[tool.pytest.ini_options]
python_files = 'test_*.py'
testpaths = 'tests/'
xfail_strict = true
log_format = '%(asctime)s %(levelname)s %(message)s'
log_date_format = '%Y-%m-%d %H:%M:%S'
log_cli = true
log_cli_level = 'INFO'

[project.scripts]
cirro = 'cirrocumulus.__main__:main'
